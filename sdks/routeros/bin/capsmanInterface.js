"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.CapsmanInterface = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
class CapsmanInterface extends pulumi.CustomResource {
    /**
     * Get an existing CapsmanInterface resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new CapsmanInterface(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of CapsmanInterface.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CapsmanInterface.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["___id_"] = state ? state.___id_ : undefined;
            resourceInputs["___path_"] = state ? state.___path_ : undefined;
            resourceInputs["___skip_"] = state ? state.___skip_ : undefined;
            resourceInputs["___ts_"] = state ? state.___ts_ : undefined;
            resourceInputs["arpTimeout"] = state ? state.arpTimeout : undefined;
            resourceInputs["bound"] = state ? state.bound : undefined;
            resourceInputs["capsmanInterfaceId"] = state ? state.capsmanInterfaceId : undefined;
            resourceInputs["channel"] = state ? state.channel : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["configuration"] = state ? state.configuration : undefined;
            resourceInputs["datapath"] = state ? state.datapath : undefined;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["inactive"] = state ? state.inactive : undefined;
            resourceInputs["l2mtu"] = state ? state.l2mtu : undefined;
            resourceInputs["macAddress"] = state ? state.macAddress : undefined;
            resourceInputs["master"] = state ? state.master : undefined;
            resourceInputs["masterInterface"] = state ? state.masterInterface : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["radioMac"] = state ? state.radioMac : undefined;
            resourceInputs["radioName"] = state ? state.radioName : undefined;
            resourceInputs["rates"] = state ? state.rates : undefined;
            resourceInputs["running"] = state ? state.running : undefined;
            resourceInputs["security"] = state ? state.security : undefined;
        }
        else {
            const args = argsOrState;
            resourceInputs["___id_"] = args ? args.___id_ : undefined;
            resourceInputs["___path_"] = args ? args.___path_ : undefined;
            resourceInputs["___skip_"] = args ? args.___skip_ : undefined;
            resourceInputs["___ts_"] = args ? args.___ts_ : undefined;
            resourceInputs["arpTimeout"] = args ? args.arpTimeout : undefined;
            resourceInputs["capsmanInterfaceId"] = args ? args.capsmanInterfaceId : undefined;
            resourceInputs["channel"] = args ? args.channel : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["configuration"] = args ? args.configuration : undefined;
            resourceInputs["datapath"] = args ? args.datapath : undefined;
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["macAddress"] = args ? args.macAddress : undefined;
            resourceInputs["masterInterface"] = args ? args.masterInterface : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["radioMac"] = args ? args.radioMac : undefined;
            resourceInputs["radioName"] = args ? args.radioName : undefined;
            resourceInputs["rates"] = args ? args.rates : undefined;
            resourceInputs["security"] = args ? args.security : undefined;
            resourceInputs["bound"] = undefined /*out*/;
            resourceInputs["inactive"] = undefined /*out*/;
            resourceInputs["l2mtu"] = undefined /*out*/;
            resourceInputs["master"] = undefined /*out*/;
            resourceInputs["running"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CapsmanInterface.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}
exports.CapsmanInterface = CapsmanInterface;
/** @internal */
CapsmanInterface.__pulumiType = 'routeros:index/capsmanInterface:CapsmanInterface';
//# sourceMappingURL=capsmanInterface.js.map