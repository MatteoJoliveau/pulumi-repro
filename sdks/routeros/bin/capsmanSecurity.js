"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.CapsmanSecurity = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
class CapsmanSecurity extends pulumi.CustomResource {
    /**
     * Get an existing CapsmanSecurity resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new CapsmanSecurity(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of CapsmanSecurity.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CapsmanSecurity.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["___id_"] = state ? state.___id_ : undefined;
            resourceInputs["___path_"] = state ? state.___path_ : undefined;
            resourceInputs["authenticationTypes"] = state ? state.authenticationTypes : undefined;
            resourceInputs["capsmanSecurityId"] = state ? state.capsmanSecurityId : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["disablePmkid"] = state ? state.disablePmkid : undefined;
            resourceInputs["eapMethods"] = state ? state.eapMethods : undefined;
            resourceInputs["eapRadiusAccounting"] = state ? state.eapRadiusAccounting : undefined;
            resourceInputs["encryptions"] = state ? state.encryptions : undefined;
            resourceInputs["groupEncryption"] = state ? state.groupEncryption : undefined;
            resourceInputs["groupKeyUpdate"] = state ? state.groupKeyUpdate : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["passphrase"] = state ? state.passphrase : undefined;
            resourceInputs["tlsCertificate"] = state ? state.tlsCertificate : undefined;
            resourceInputs["tlsMode"] = state ? state.tlsMode : undefined;
        }
        else {
            const args = argsOrState;
            resourceInputs["___id_"] = args ? args.___id_ : undefined;
            resourceInputs["___path_"] = args ? args.___path_ : undefined;
            resourceInputs["authenticationTypes"] = args ? args.authenticationTypes : undefined;
            resourceInputs["capsmanSecurityId"] = args ? args.capsmanSecurityId : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["disablePmkid"] = args ? args.disablePmkid : undefined;
            resourceInputs["eapMethods"] = args ? args.eapMethods : undefined;
            resourceInputs["eapRadiusAccounting"] = args ? args.eapRadiusAccounting : undefined;
            resourceInputs["encryptions"] = args ? args.encryptions : undefined;
            resourceInputs["groupEncryption"] = args ? args.groupEncryption : undefined;
            resourceInputs["groupKeyUpdate"] = args ? args.groupKeyUpdate : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["passphrase"] = (args === null || args === void 0 ? void 0 : args.passphrase) ? pulumi.secret(args.passphrase) : undefined;
            resourceInputs["tlsCertificate"] = args ? args.tlsCertificate : undefined;
            resourceInputs["tlsMode"] = args ? args.tlsMode : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["passphrase"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(CapsmanSecurity.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}
exports.CapsmanSecurity = CapsmanSecurity;
/** @internal */
CapsmanSecurity.__pulumiType = 'routeros:index/capsmanSecurity:CapsmanSecurity';
//# sourceMappingURL=capsmanSecurity.js.map