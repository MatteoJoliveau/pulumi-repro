"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.DhcpClientOption = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
class DhcpClientOption extends pulumi.CustomResource {
    /**
     * Get an existing DhcpClientOption resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new DhcpClientOption(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of DhcpClientOption.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DhcpClientOption.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["___id_"] = state ? state.___id_ : undefined;
            resourceInputs["___path_"] = state ? state.___path_ : undefined;
            resourceInputs["code"] = state ? state.code : undefined;
            resourceInputs["dhcpClientOptionId"] = state ? state.dhcpClientOptionId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["rawValue"] = state ? state.rawValue : undefined;
            resourceInputs["value"] = state ? state.value : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.code === undefined) && !opts.urn) {
                throw new Error("Missing required property 'code'");
            }
            resourceInputs["___id_"] = args ? args.___id_ : undefined;
            resourceInputs["___path_"] = args ? args.___path_ : undefined;
            resourceInputs["code"] = args ? args.code : undefined;
            resourceInputs["dhcpClientOptionId"] = args ? args.dhcpClientOptionId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["rawValue"] = args ? args.rawValue : undefined;
            resourceInputs["value"] = args ? args.value : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DhcpClientOption.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}
exports.DhcpClientOption = DhcpClientOption;
/** @internal */
DhcpClientOption.__pulumiType = 'routeros:index/dhcpClientOption:DhcpClientOption';
//# sourceMappingURL=dhcpClientOption.js.map