"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.FirewallFilter = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
class FirewallFilter extends pulumi.CustomResource {
    /**
     * Get an existing FirewallFilter resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new FirewallFilter(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of FirewallFilter.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FirewallFilter.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["___id_"] = state ? state.___id_ : undefined;
            resourceInputs["___path_"] = state ? state.___path_ : undefined;
            resourceInputs["___skip_"] = state ? state.___skip_ : undefined;
            resourceInputs["___unset_"] = state ? state.___unset_ : undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["addressList"] = state ? state.addressList : undefined;
            resourceInputs["addressListTimeout"] = state ? state.addressListTimeout : undefined;
            resourceInputs["chain"] = state ? state.chain : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["connectionBytes"] = state ? state.connectionBytes : undefined;
            resourceInputs["connectionLimit"] = state ? state.connectionLimit : undefined;
            resourceInputs["connectionMark"] = state ? state.connectionMark : undefined;
            resourceInputs["connectionNatState"] = state ? state.connectionNatState : undefined;
            resourceInputs["connectionRate"] = state ? state.connectionRate : undefined;
            resourceInputs["connectionState"] = state ? state.connectionState : undefined;
            resourceInputs["connectionType"] = state ? state.connectionType : undefined;
            resourceInputs["content"] = state ? state.content : undefined;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["dscp"] = state ? state.dscp : undefined;
            resourceInputs["dstAddress"] = state ? state.dstAddress : undefined;
            resourceInputs["dstAddressList"] = state ? state.dstAddressList : undefined;
            resourceInputs["dstAddressType"] = state ? state.dstAddressType : undefined;
            resourceInputs["dstLimit"] = state ? state.dstLimit : undefined;
            resourceInputs["dstPort"] = state ? state.dstPort : undefined;
            resourceInputs["dynamic"] = state ? state.dynamic : undefined;
            resourceInputs["firewallFilterId"] = state ? state.firewallFilterId : undefined;
            resourceInputs["fragment"] = state ? state.fragment : undefined;
            resourceInputs["hotspot"] = state ? state.hotspot : undefined;
            resourceInputs["hwOffload"] = state ? state.hwOffload : undefined;
            resourceInputs["icmpOptions"] = state ? state.icmpOptions : undefined;
            resourceInputs["inBridgePort"] = state ? state.inBridgePort : undefined;
            resourceInputs["inBridgePortList"] = state ? state.inBridgePortList : undefined;
            resourceInputs["inInterface"] = state ? state.inInterface : undefined;
            resourceInputs["inInterfaceList"] = state ? state.inInterfaceList : undefined;
            resourceInputs["ingressPriority"] = state ? state.ingressPriority : undefined;
            resourceInputs["invalid"] = state ? state.invalid : undefined;
            resourceInputs["ipsecPolicy"] = state ? state.ipsecPolicy : undefined;
            resourceInputs["ipv4Options"] = state ? state.ipv4Options : undefined;
            resourceInputs["jumpTarget"] = state ? state.jumpTarget : undefined;
            resourceInputs["layer7Protocol"] = state ? state.layer7Protocol : undefined;
            resourceInputs["limit"] = state ? state.limit : undefined;
            resourceInputs["log"] = state ? state.log : undefined;
            resourceInputs["logPrefix"] = state ? state.logPrefix : undefined;
            resourceInputs["nth"] = state ? state.nth : undefined;
            resourceInputs["outBridgePort"] = state ? state.outBridgePort : undefined;
            resourceInputs["outBridgePortList"] = state ? state.outBridgePortList : undefined;
            resourceInputs["outInterface"] = state ? state.outInterface : undefined;
            resourceInputs["outInterfaceList"] = state ? state.outInterfaceList : undefined;
            resourceInputs["packetMark"] = state ? state.packetMark : undefined;
            resourceInputs["packetSize"] = state ? state.packetSize : undefined;
            resourceInputs["perConnectionClassifier"] = state ? state.perConnectionClassifier : undefined;
            resourceInputs["placeBefore"] = state ? state.placeBefore : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["protocol"] = state ? state.protocol : undefined;
            resourceInputs["psd"] = state ? state.psd : undefined;
            resourceInputs["random"] = state ? state.random : undefined;
            resourceInputs["rejectWith"] = state ? state.rejectWith : undefined;
            resourceInputs["routingMark"] = state ? state.routingMark : undefined;
            resourceInputs["routingTable"] = state ? state.routingTable : undefined;
            resourceInputs["srcAddress"] = state ? state.srcAddress : undefined;
            resourceInputs["srcAddressList"] = state ? state.srcAddressList : undefined;
            resourceInputs["srcAddressType"] = state ? state.srcAddressType : undefined;
            resourceInputs["srcMacAddress"] = state ? state.srcMacAddress : undefined;
            resourceInputs["srcPort"] = state ? state.srcPort : undefined;
            resourceInputs["tcpFlags"] = state ? state.tcpFlags : undefined;
            resourceInputs["tcpMss"] = state ? state.tcpMss : undefined;
            resourceInputs["time"] = state ? state.time : undefined;
            resourceInputs["tlsHost"] = state ? state.tlsHost : undefined;
            resourceInputs["ttl"] = state ? state.ttl : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.action === undefined) && !opts.urn) {
                throw new Error("Missing required property 'action'");
            }
            if ((!args || args.chain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'chain'");
            }
            resourceInputs["___id_"] = args ? args.___id_ : undefined;
            resourceInputs["___path_"] = args ? args.___path_ : undefined;
            resourceInputs["___skip_"] = args ? args.___skip_ : undefined;
            resourceInputs["___unset_"] = args ? args.___unset_ : undefined;
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["addressList"] = args ? args.addressList : undefined;
            resourceInputs["addressListTimeout"] = args ? args.addressListTimeout : undefined;
            resourceInputs["chain"] = args ? args.chain : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["connectionBytes"] = args ? args.connectionBytes : undefined;
            resourceInputs["connectionLimit"] = args ? args.connectionLimit : undefined;
            resourceInputs["connectionMark"] = args ? args.connectionMark : undefined;
            resourceInputs["connectionNatState"] = args ? args.connectionNatState : undefined;
            resourceInputs["connectionRate"] = args ? args.connectionRate : undefined;
            resourceInputs["connectionState"] = args ? args.connectionState : undefined;
            resourceInputs["connectionType"] = args ? args.connectionType : undefined;
            resourceInputs["content"] = args ? args.content : undefined;
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["dscp"] = args ? args.dscp : undefined;
            resourceInputs["dstAddress"] = args ? args.dstAddress : undefined;
            resourceInputs["dstAddressList"] = args ? args.dstAddressList : undefined;
            resourceInputs["dstAddressType"] = args ? args.dstAddressType : undefined;
            resourceInputs["dstLimit"] = args ? args.dstLimit : undefined;
            resourceInputs["dstPort"] = args ? args.dstPort : undefined;
            resourceInputs["firewallFilterId"] = args ? args.firewallFilterId : undefined;
            resourceInputs["fragment"] = args ? args.fragment : undefined;
            resourceInputs["hotspot"] = args ? args.hotspot : undefined;
            resourceInputs["hwOffload"] = args ? args.hwOffload : undefined;
            resourceInputs["icmpOptions"] = args ? args.icmpOptions : undefined;
            resourceInputs["inBridgePort"] = args ? args.inBridgePort : undefined;
            resourceInputs["inBridgePortList"] = args ? args.inBridgePortList : undefined;
            resourceInputs["inInterface"] = args ? args.inInterface : undefined;
            resourceInputs["inInterfaceList"] = args ? args.inInterfaceList : undefined;
            resourceInputs["ingressPriority"] = args ? args.ingressPriority : undefined;
            resourceInputs["ipsecPolicy"] = args ? args.ipsecPolicy : undefined;
            resourceInputs["ipv4Options"] = args ? args.ipv4Options : undefined;
            resourceInputs["jumpTarget"] = args ? args.jumpTarget : undefined;
            resourceInputs["layer7Protocol"] = args ? args.layer7Protocol : undefined;
            resourceInputs["limit"] = args ? args.limit : undefined;
            resourceInputs["log"] = args ? args.log : undefined;
            resourceInputs["logPrefix"] = args ? args.logPrefix : undefined;
            resourceInputs["nth"] = args ? args.nth : undefined;
            resourceInputs["outBridgePort"] = args ? args.outBridgePort : undefined;
            resourceInputs["outBridgePortList"] = args ? args.outBridgePortList : undefined;
            resourceInputs["outInterface"] = args ? args.outInterface : undefined;
            resourceInputs["outInterfaceList"] = args ? args.outInterfaceList : undefined;
            resourceInputs["packetMark"] = args ? args.packetMark : undefined;
            resourceInputs["packetSize"] = args ? args.packetSize : undefined;
            resourceInputs["perConnectionClassifier"] = args ? args.perConnectionClassifier : undefined;
            resourceInputs["placeBefore"] = args ? args.placeBefore : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["protocol"] = args ? args.protocol : undefined;
            resourceInputs["psd"] = args ? args.psd : undefined;
            resourceInputs["random"] = args ? args.random : undefined;
            resourceInputs["rejectWith"] = args ? args.rejectWith : undefined;
            resourceInputs["routingMark"] = args ? args.routingMark : undefined;
            resourceInputs["routingTable"] = args ? args.routingTable : undefined;
            resourceInputs["srcAddress"] = args ? args.srcAddress : undefined;
            resourceInputs["srcAddressList"] = args ? args.srcAddressList : undefined;
            resourceInputs["srcAddressType"] = args ? args.srcAddressType : undefined;
            resourceInputs["srcMacAddress"] = args ? args.srcMacAddress : undefined;
            resourceInputs["srcPort"] = args ? args.srcPort : undefined;
            resourceInputs["tcpFlags"] = args ? args.tcpFlags : undefined;
            resourceInputs["tcpMss"] = args ? args.tcpMss : undefined;
            resourceInputs["time"] = args ? args.time : undefined;
            resourceInputs["tlsHost"] = args ? args.tlsHost : undefined;
            resourceInputs["ttl"] = args ? args.ttl : undefined;
            resourceInputs["dynamic"] = undefined /*out*/;
            resourceInputs["invalid"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FirewallFilter.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}
exports.FirewallFilter = FirewallFilter;
/** @internal */
FirewallFilter.__pulumiType = 'routeros:index/firewallFilter:FirewallFilter';
//# sourceMappingURL=firewallFilter.js.map