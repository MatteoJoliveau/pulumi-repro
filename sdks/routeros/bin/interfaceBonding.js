"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.InterfaceBonding = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
class InterfaceBonding extends pulumi.CustomResource {
    /**
     * Get an existing InterfaceBonding resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new InterfaceBonding(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of InterfaceBonding.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InterfaceBonding.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["___id_"] = state ? state.___id_ : undefined;
            resourceInputs["___path_"] = state ? state.___path_ : undefined;
            resourceInputs["arp"] = state ? state.arp : undefined;
            resourceInputs["arpInterval"] = state ? state.arpInterval : undefined;
            resourceInputs["arpIpTargets"] = state ? state.arpIpTargets : undefined;
            resourceInputs["arpTimeout"] = state ? state.arpTimeout : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["downDelay"] = state ? state.downDelay : undefined;
            resourceInputs["forcedMacAddress"] = state ? state.forcedMacAddress : undefined;
            resourceInputs["interfaceBondingId"] = state ? state.interfaceBondingId : undefined;
            resourceInputs["lacpRate"] = state ? state.lacpRate : undefined;
            resourceInputs["lacpUserKey"] = state ? state.lacpUserKey : undefined;
            resourceInputs["linkMonitoring"] = state ? state.linkMonitoring : undefined;
            resourceInputs["macAddress"] = state ? state.macAddress : undefined;
            resourceInputs["miiInterval"] = state ? state.miiInterval : undefined;
            resourceInputs["minLinks"] = state ? state.minLinks : undefined;
            resourceInputs["mlagId"] = state ? state.mlagId : undefined;
            resourceInputs["mode"] = state ? state.mode : undefined;
            resourceInputs["mtu"] = state ? state.mtu : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["primary"] = state ? state.primary : undefined;
            resourceInputs["running"] = state ? state.running : undefined;
            resourceInputs["slaves"] = state ? state.slaves : undefined;
            resourceInputs["transmitHashPolicy"] = state ? state.transmitHashPolicy : undefined;
            resourceInputs["upDelay"] = state ? state.upDelay : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.slaves === undefined) && !opts.urn) {
                throw new Error("Missing required property 'slaves'");
            }
            resourceInputs["___id_"] = args ? args.___id_ : undefined;
            resourceInputs["___path_"] = args ? args.___path_ : undefined;
            resourceInputs["arp"] = args ? args.arp : undefined;
            resourceInputs["arpInterval"] = args ? args.arpInterval : undefined;
            resourceInputs["arpIpTargets"] = args ? args.arpIpTargets : undefined;
            resourceInputs["arpTimeout"] = args ? args.arpTimeout : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["downDelay"] = args ? args.downDelay : undefined;
            resourceInputs["forcedMacAddress"] = args ? args.forcedMacAddress : undefined;
            resourceInputs["interfaceBondingId"] = args ? args.interfaceBondingId : undefined;
            resourceInputs["lacpRate"] = args ? args.lacpRate : undefined;
            resourceInputs["lacpUserKey"] = args ? args.lacpUserKey : undefined;
            resourceInputs["linkMonitoring"] = args ? args.linkMonitoring : undefined;
            resourceInputs["miiInterval"] = args ? args.miiInterval : undefined;
            resourceInputs["minLinks"] = args ? args.minLinks : undefined;
            resourceInputs["mlagId"] = args ? args.mlagId : undefined;
            resourceInputs["mode"] = args ? args.mode : undefined;
            resourceInputs["mtu"] = args ? args.mtu : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["primary"] = args ? args.primary : undefined;
            resourceInputs["slaves"] = args ? args.slaves : undefined;
            resourceInputs["transmitHashPolicy"] = args ? args.transmitHashPolicy : undefined;
            resourceInputs["upDelay"] = args ? args.upDelay : undefined;
            resourceInputs["macAddress"] = undefined /*out*/;
            resourceInputs["running"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(InterfaceBonding.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}
exports.InterfaceBonding = InterfaceBonding;
/** @internal */
InterfaceBonding.__pulumiType = 'routeros:index/interfaceBonding:InterfaceBonding';
//# sourceMappingURL=interfaceBonding.js.map