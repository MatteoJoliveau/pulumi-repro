"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.InterfaceDot1xServer = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
class InterfaceDot1xServer extends pulumi.CustomResource {
    /**
     * Get an existing InterfaceDot1xServer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new InterfaceDot1xServer(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of InterfaceDot1xServer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InterfaceDot1xServer.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["___id_"] = state ? state.___id_ : undefined;
            resourceInputs["___path_"] = state ? state.___path_ : undefined;
            resourceInputs["accounting"] = state ? state.accounting : undefined;
            resourceInputs["authTimeout"] = state ? state.authTimeout : undefined;
            resourceInputs["authTypes"] = state ? state.authTypes : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["guestVlanId"] = state ? state.guestVlanId : undefined;
            resourceInputs["interface"] = state ? state.interface : undefined;
            resourceInputs["interfaceDot1xServerId"] = state ? state.interfaceDot1xServerId : undefined;
            resourceInputs["interimUpdate"] = state ? state.interimUpdate : undefined;
            resourceInputs["macAuthMode"] = state ? state.macAuthMode : undefined;
            resourceInputs["radiusMacFormat"] = state ? state.radiusMacFormat : undefined;
            resourceInputs["reauthTimeout"] = state ? state.reauthTimeout : undefined;
            resourceInputs["rejectVlanId"] = state ? state.rejectVlanId : undefined;
            resourceInputs["retransTimeout"] = state ? state.retransTimeout : undefined;
            resourceInputs["serverFailVlanId"] = state ? state.serverFailVlanId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.interface === undefined) && !opts.urn) {
                throw new Error("Missing required property 'interface'");
            }
            resourceInputs["___id_"] = args ? args.___id_ : undefined;
            resourceInputs["___path_"] = args ? args.___path_ : undefined;
            resourceInputs["accounting"] = args ? args.accounting : undefined;
            resourceInputs["authTimeout"] = args ? args.authTimeout : undefined;
            resourceInputs["authTypes"] = args ? args.authTypes : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["guestVlanId"] = args ? args.guestVlanId : undefined;
            resourceInputs["interface"] = args ? args.interface : undefined;
            resourceInputs["interfaceDot1xServerId"] = args ? args.interfaceDot1xServerId : undefined;
            resourceInputs["interimUpdate"] = args ? args.interimUpdate : undefined;
            resourceInputs["macAuthMode"] = args ? args.macAuthMode : undefined;
            resourceInputs["radiusMacFormat"] = args ? args.radiusMacFormat : undefined;
            resourceInputs["reauthTimeout"] = args ? args.reauthTimeout : undefined;
            resourceInputs["rejectVlanId"] = args ? args.rejectVlanId : undefined;
            resourceInputs["retransTimeout"] = args ? args.retransTimeout : undefined;
            resourceInputs["serverFailVlanId"] = args ? args.serverFailVlanId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(InterfaceDot1xServer.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}
exports.InterfaceDot1xServer = InterfaceDot1xServer;
/** @internal */
InterfaceDot1xServer.__pulumiType = 'routeros:index/interfaceDot1xServer:InterfaceDot1xServer';
//# sourceMappingURL=interfaceDot1xServer.js.map