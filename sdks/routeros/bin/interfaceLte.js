"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.InterfaceLte = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
class InterfaceLte extends pulumi.CustomResource {
    /**
     * Get an existing InterfaceLte resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new InterfaceLte(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of InterfaceLte.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InterfaceLte.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["___id_"] = state ? state.___id_ : undefined;
            resourceInputs["___path_"] = state ? state.___path_ : undefined;
            resourceInputs["allowRoaming"] = state ? state.allowRoaming : undefined;
            resourceInputs["apnProfiles"] = state ? state.apnProfiles : undefined;
            resourceInputs["bands"] = state ? state.bands : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["defaultName"] = state ? state.defaultName : undefined;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["inactive"] = state ? state.inactive : undefined;
            resourceInputs["interfaceLteId"] = state ? state.interfaceLteId : undefined;
            resourceInputs["modemInit"] = state ? state.modemInit : undefined;
            resourceInputs["mtu"] = state ? state.mtu : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkModes"] = state ? state.networkModes : undefined;
            resourceInputs["nrBands"] = state ? state.nrBands : undefined;
            resourceInputs["operator"] = state ? state.operator : undefined;
            resourceInputs["pin"] = state ? state.pin : undefined;
            resourceInputs["running"] = state ? state.running : undefined;
            resourceInputs["smsProtocol"] = state ? state.smsProtocol : undefined;
            resourceInputs["smsRead"] = state ? state.smsRead : undefined;
        }
        else {
            const args = argsOrState;
            resourceInputs["___id_"] = args ? args.___id_ : undefined;
            resourceInputs["___path_"] = args ? args.___path_ : undefined;
            resourceInputs["allowRoaming"] = args ? args.allowRoaming : undefined;
            resourceInputs["apnProfiles"] = args ? args.apnProfiles : undefined;
            resourceInputs["bands"] = args ? args.bands : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["interfaceLteId"] = args ? args.interfaceLteId : undefined;
            resourceInputs["modemInit"] = args ? args.modemInit : undefined;
            resourceInputs["mtu"] = args ? args.mtu : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkModes"] = args ? args.networkModes : undefined;
            resourceInputs["nrBands"] = args ? args.nrBands : undefined;
            resourceInputs["operator"] = args ? args.operator : undefined;
            resourceInputs["pin"] = args ? args.pin : undefined;
            resourceInputs["smsProtocol"] = args ? args.smsProtocol : undefined;
            resourceInputs["smsRead"] = args ? args.smsRead : undefined;
            resourceInputs["defaultName"] = undefined /*out*/;
            resourceInputs["inactive"] = undefined /*out*/;
            resourceInputs["running"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(InterfaceLte.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}
exports.InterfaceLte = InterfaceLte;
/** @internal */
InterfaceLte.__pulumiType = 'routeros:index/interfaceLte:InterfaceLte';
//# sourceMappingURL=interfaceLte.js.map