"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.InterfaceVlan = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
class InterfaceVlan extends pulumi.CustomResource {
    /**
     * Get an existing InterfaceVlan resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new InterfaceVlan(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of InterfaceVlan.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InterfaceVlan.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["___id_"] = state ? state.___id_ : undefined;
            resourceInputs["___path_"] = state ? state.___path_ : undefined;
            resourceInputs["arp"] = state ? state.arp : undefined;
            resourceInputs["arpTimeout"] = state ? state.arpTimeout : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["interface"] = state ? state.interface : undefined;
            resourceInputs["interfaceVlanId"] = state ? state.interfaceVlanId : undefined;
            resourceInputs["l2mtu"] = state ? state.l2mtu : undefined;
            resourceInputs["loopProtect"] = state ? state.loopProtect : undefined;
            resourceInputs["loopProtectDisableTime"] = state ? state.loopProtectDisableTime : undefined;
            resourceInputs["loopProtectSendInterval"] = state ? state.loopProtectSendInterval : undefined;
            resourceInputs["loopProtectStatus"] = state ? state.loopProtectStatus : undefined;
            resourceInputs["macAddress"] = state ? state.macAddress : undefined;
            resourceInputs["mtu"] = state ? state.mtu : undefined;
            resourceInputs["mvrp"] = state ? state.mvrp : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["running"] = state ? state.running : undefined;
            resourceInputs["useServiceTag"] = state ? state.useServiceTag : undefined;
            resourceInputs["vlanId"] = state ? state.vlanId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.interface === undefined) && !opts.urn) {
                throw new Error("Missing required property 'interface'");
            }
            if ((!args || args.vlanId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vlanId'");
            }
            resourceInputs["___id_"] = args ? args.___id_ : undefined;
            resourceInputs["___path_"] = args ? args.___path_ : undefined;
            resourceInputs["arp"] = args ? args.arp : undefined;
            resourceInputs["arpTimeout"] = args ? args.arpTimeout : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["interface"] = args ? args.interface : undefined;
            resourceInputs["interfaceVlanId"] = args ? args.interfaceVlanId : undefined;
            resourceInputs["loopProtect"] = args ? args.loopProtect : undefined;
            resourceInputs["loopProtectDisableTime"] = args ? args.loopProtectDisableTime : undefined;
            resourceInputs["loopProtectSendInterval"] = args ? args.loopProtectSendInterval : undefined;
            resourceInputs["mtu"] = args ? args.mtu : undefined;
            resourceInputs["mvrp"] = args ? args.mvrp : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["useServiceTag"] = args ? args.useServiceTag : undefined;
            resourceInputs["vlanId"] = args ? args.vlanId : undefined;
            resourceInputs["l2mtu"] = undefined /*out*/;
            resourceInputs["loopProtectStatus"] = undefined /*out*/;
            resourceInputs["macAddress"] = undefined /*out*/;
            resourceInputs["running"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(InterfaceVlan.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}
exports.InterfaceVlan = InterfaceVlan;
/** @internal */
InterfaceVlan.__pulumiType = 'routeros:index/interfaceVlan:InterfaceVlan';
//# sourceMappingURL=interfaceVlan.js.map