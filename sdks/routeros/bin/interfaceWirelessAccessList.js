"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.InterfaceWirelessAccessList = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
class InterfaceWirelessAccessList extends pulumi.CustomResource {
    /**
     * Get an existing InterfaceWirelessAccessList resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new InterfaceWirelessAccessList(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of InterfaceWirelessAccessList.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InterfaceWirelessAccessList.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["___id_"] = state ? state.___id_ : undefined;
            resourceInputs["___path_"] = state ? state.___path_ : undefined;
            resourceInputs["allowSignalOutOfRange"] = state ? state.allowSignalOutOfRange : undefined;
            resourceInputs["apTxLimit"] = state ? state.apTxLimit : undefined;
            resourceInputs["authentication"] = state ? state.authentication : undefined;
            resourceInputs["clientTxLimit"] = state ? state.clientTxLimit : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["forwarding"] = state ? state.forwarding : undefined;
            resourceInputs["interface"] = state ? state.interface : undefined;
            resourceInputs["interfaceWirelessAccessListId"] = state ? state.interfaceWirelessAccessListId : undefined;
            resourceInputs["macAddress"] = state ? state.macAddress : undefined;
            resourceInputs["managementProtectionKey"] = state ? state.managementProtectionKey : undefined;
            resourceInputs["privateAlgo"] = state ? state.privateAlgo : undefined;
            resourceInputs["privateKey"] = state ? state.privateKey : undefined;
            resourceInputs["privatePreSharedKey"] = state ? state.privatePreSharedKey : undefined;
            resourceInputs["signalRange"] = state ? state.signalRange : undefined;
            resourceInputs["time"] = state ? state.time : undefined;
            resourceInputs["vlanId"] = state ? state.vlanId : undefined;
            resourceInputs["vlanMode"] = state ? state.vlanMode : undefined;
        }
        else {
            const args = argsOrState;
            resourceInputs["___id_"] = args ? args.___id_ : undefined;
            resourceInputs["___path_"] = args ? args.___path_ : undefined;
            resourceInputs["allowSignalOutOfRange"] = args ? args.allowSignalOutOfRange : undefined;
            resourceInputs["apTxLimit"] = args ? args.apTxLimit : undefined;
            resourceInputs["authentication"] = args ? args.authentication : undefined;
            resourceInputs["clientTxLimit"] = args ? args.clientTxLimit : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["forwarding"] = args ? args.forwarding : undefined;
            resourceInputs["interface"] = args ? args.interface : undefined;
            resourceInputs["interfaceWirelessAccessListId"] = args ? args.interfaceWirelessAccessListId : undefined;
            resourceInputs["macAddress"] = args ? args.macAddress : undefined;
            resourceInputs["managementProtectionKey"] = args ? args.managementProtectionKey : undefined;
            resourceInputs["privateAlgo"] = args ? args.privateAlgo : undefined;
            resourceInputs["privateKey"] = args ? args.privateKey : undefined;
            resourceInputs["privatePreSharedKey"] = args ? args.privatePreSharedKey : undefined;
            resourceInputs["signalRange"] = args ? args.signalRange : undefined;
            resourceInputs["time"] = args ? args.time : undefined;
            resourceInputs["vlanId"] = args ? args.vlanId : undefined;
            resourceInputs["vlanMode"] = args ? args.vlanMode : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(InterfaceWirelessAccessList.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}
exports.InterfaceWirelessAccessList = InterfaceWirelessAccessList;
/** @internal */
InterfaceWirelessAccessList.__pulumiType = 'routeros:index/interfaceWirelessAccessList:InterfaceWirelessAccessList';
//# sourceMappingURL=interfaceWirelessAccessList.js.map