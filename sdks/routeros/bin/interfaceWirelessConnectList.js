"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.InterfaceWirelessConnectList = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
class InterfaceWirelessConnectList extends pulumi.CustomResource {
    /**
     * Get an existing InterfaceWirelessConnectList resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new InterfaceWirelessConnectList(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of InterfaceWirelessConnectList.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InterfaceWirelessConnectList.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["___id_"] = state ? state.___id_ : undefined;
            resourceInputs["___path_"] = state ? state.___path_ : undefined;
            resourceInputs["___ts_"] = state ? state.___ts_ : undefined;
            resourceInputs["allowSignalOutOfRange"] = state ? state.allowSignalOutOfRange : undefined;
            resourceInputs["areaPrefix"] = state ? state.areaPrefix : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["connect"] = state ? state.connect : undefined;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["interface"] = state ? state.interface : undefined;
            resourceInputs["interfaceWirelessConnectListId"] = state ? state.interfaceWirelessConnectListId : undefined;
            resourceInputs["interworking"] = state ? state.interworking : undefined;
            resourceInputs["macAddress"] = state ? state.macAddress : undefined;
            resourceInputs["securityProfile"] = state ? state.securityProfile : undefined;
            resourceInputs["signalRange"] = state ? state.signalRange : undefined;
            resourceInputs["ssid"] = state ? state.ssid : undefined;
            resourceInputs["threeGpp"] = state ? state.threeGpp : undefined;
            resourceInputs["wirelessProtocol"] = state ? state.wirelessProtocol : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.interface === undefined) && !opts.urn) {
                throw new Error("Missing required property 'interface'");
            }
            resourceInputs["___id_"] = args ? args.___id_ : undefined;
            resourceInputs["___path_"] = args ? args.___path_ : undefined;
            resourceInputs["___ts_"] = args ? args.___ts_ : undefined;
            resourceInputs["allowSignalOutOfRange"] = args ? args.allowSignalOutOfRange : undefined;
            resourceInputs["areaPrefix"] = args ? args.areaPrefix : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["connect"] = args ? args.connect : undefined;
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["interface"] = args ? args.interface : undefined;
            resourceInputs["interfaceWirelessConnectListId"] = args ? args.interfaceWirelessConnectListId : undefined;
            resourceInputs["interworking"] = args ? args.interworking : undefined;
            resourceInputs["macAddress"] = args ? args.macAddress : undefined;
            resourceInputs["securityProfile"] = args ? args.securityProfile : undefined;
            resourceInputs["signalRange"] = args ? args.signalRange : undefined;
            resourceInputs["ssid"] = args ? args.ssid : undefined;
            resourceInputs["threeGpp"] = args ? args.threeGpp : undefined;
            resourceInputs["wirelessProtocol"] = args ? args.wirelessProtocol : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(InterfaceWirelessConnectList.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}
exports.InterfaceWirelessConnectList = InterfaceWirelessConnectList;
/** @internal */
InterfaceWirelessConnectList.__pulumiType = 'routeros:index/interfaceWirelessConnectList:InterfaceWirelessConnectList';
//# sourceMappingURL=interfaceWirelessConnectList.js.map