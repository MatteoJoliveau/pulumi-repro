"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.IpHotspotUser = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
class IpHotspotUser extends pulumi.CustomResource {
    /**
     * Get an existing IpHotspotUser resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new IpHotspotUser(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of IpHotspotUser.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IpHotspotUser.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["___id_"] = state ? state.___id_ : undefined;
            resourceInputs["___path_"] = state ? state.___path_ : undefined;
            resourceInputs["___skip_"] = state ? state.___skip_ : undefined;
            resourceInputs["address"] = state ? state.address : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["default"] = state ? state.default : undefined;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["dynamic"] = state ? state.dynamic : undefined;
            resourceInputs["email"] = state ? state.email : undefined;
            resourceInputs["ipHotspotUserId"] = state ? state.ipHotspotUserId : undefined;
            resourceInputs["limitBytesIn"] = state ? state.limitBytesIn : undefined;
            resourceInputs["limitBytesOut"] = state ? state.limitBytesOut : undefined;
            resourceInputs["limitBytesTotal"] = state ? state.limitBytesTotal : undefined;
            resourceInputs["limitUptime"] = state ? state.limitUptime : undefined;
            resourceInputs["macAddress"] = state ? state.macAddress : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["profile"] = state ? state.profile : undefined;
            resourceInputs["routes"] = state ? state.routes : undefined;
            resourceInputs["server"] = state ? state.server : undefined;
        }
        else {
            const args = argsOrState;
            resourceInputs["___id_"] = args ? args.___id_ : undefined;
            resourceInputs["___path_"] = args ? args.___path_ : undefined;
            resourceInputs["___skip_"] = args ? args.___skip_ : undefined;
            resourceInputs["address"] = args ? args.address : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["email"] = args ? args.email : undefined;
            resourceInputs["ipHotspotUserId"] = args ? args.ipHotspotUserId : undefined;
            resourceInputs["limitBytesIn"] = args ? args.limitBytesIn : undefined;
            resourceInputs["limitBytesOut"] = args ? args.limitBytesOut : undefined;
            resourceInputs["limitBytesTotal"] = args ? args.limitBytesTotal : undefined;
            resourceInputs["limitUptime"] = args ? args.limitUptime : undefined;
            resourceInputs["macAddress"] = args ? args.macAddress : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["password"] = (args === null || args === void 0 ? void 0 : args.password) ? pulumi.secret(args.password) : undefined;
            resourceInputs["profile"] = args ? args.profile : undefined;
            resourceInputs["routes"] = args ? args.routes : undefined;
            resourceInputs["server"] = args ? args.server : undefined;
            resourceInputs["default"] = undefined /*out*/;
            resourceInputs["dynamic"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(IpHotspotUser.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}
exports.IpHotspotUser = IpHotspotUser;
/** @internal */
IpHotspotUser.__pulumiType = 'routeros:index/ipHotspotUser:IpHotspotUser';
//# sourceMappingURL=ipHotspotUser.js.map