"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.PppProfile = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
class PppProfile extends pulumi.CustomResource {
    /**
     * Get an existing PppProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new PppProfile(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of PppProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PppProfile.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["___id_"] = state ? state.___id_ : undefined;
            resourceInputs["___path_"] = state ? state.___path_ : undefined;
            resourceInputs["addressList"] = state ? state.addressList : undefined;
            resourceInputs["bridge"] = state ? state.bridge : undefined;
            resourceInputs["bridgeHorizon"] = state ? state.bridgeHorizon : undefined;
            resourceInputs["bridgeLearning"] = state ? state.bridgeLearning : undefined;
            resourceInputs["bridgePathCost"] = state ? state.bridgePathCost : undefined;
            resourceInputs["bridgePortPriority"] = state ? state.bridgePortPriority : undefined;
            resourceInputs["changeTcpMss"] = state ? state.changeTcpMss : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["default"] = state ? state.default : undefined;
            resourceInputs["dhcpv6PdPool"] = state ? state.dhcpv6PdPool : undefined;
            resourceInputs["dnsServers"] = state ? state.dnsServers : undefined;
            resourceInputs["idleTimeout"] = state ? state.idleTimeout : undefined;
            resourceInputs["incomingFilter"] = state ? state.incomingFilter : undefined;
            resourceInputs["insertQueueBefore"] = state ? state.insertQueueBefore : undefined;
            resourceInputs["interfaceList"] = state ? state.interfaceList : undefined;
            resourceInputs["localAddress"] = state ? state.localAddress : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["onDown"] = state ? state.onDown : undefined;
            resourceInputs["onUp"] = state ? state.onUp : undefined;
            resourceInputs["onlyOne"] = state ? state.onlyOne : undefined;
            resourceInputs["outgoingFilter"] = state ? state.outgoingFilter : undefined;
            resourceInputs["parentQueue"] = state ? state.parentQueue : undefined;
            resourceInputs["pppProfileId"] = state ? state.pppProfileId : undefined;
            resourceInputs["queueType"] = state ? state.queueType : undefined;
            resourceInputs["rateLimit"] = state ? state.rateLimit : undefined;
            resourceInputs["remoteAddress"] = state ? state.remoteAddress : undefined;
            resourceInputs["remoteIpv6PrefixPool"] = state ? state.remoteIpv6PrefixPool : undefined;
            resourceInputs["sessionTimeout"] = state ? state.sessionTimeout : undefined;
            resourceInputs["useCompression"] = state ? state.useCompression : undefined;
            resourceInputs["useEncryption"] = state ? state.useEncryption : undefined;
            resourceInputs["useIpv6"] = state ? state.useIpv6 : undefined;
            resourceInputs["useMpls"] = state ? state.useMpls : undefined;
            resourceInputs["useUpnp"] = state ? state.useUpnp : undefined;
            resourceInputs["winsServers"] = state ? state.winsServers : undefined;
        }
        else {
            const args = argsOrState;
            resourceInputs["___id_"] = args ? args.___id_ : undefined;
            resourceInputs["___path_"] = args ? args.___path_ : undefined;
            resourceInputs["addressList"] = args ? args.addressList : undefined;
            resourceInputs["bridge"] = args ? args.bridge : undefined;
            resourceInputs["bridgeHorizon"] = args ? args.bridgeHorizon : undefined;
            resourceInputs["bridgeLearning"] = args ? args.bridgeLearning : undefined;
            resourceInputs["bridgePathCost"] = args ? args.bridgePathCost : undefined;
            resourceInputs["bridgePortPriority"] = args ? args.bridgePortPriority : undefined;
            resourceInputs["changeTcpMss"] = args ? args.changeTcpMss : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["dhcpv6PdPool"] = args ? args.dhcpv6PdPool : undefined;
            resourceInputs["dnsServers"] = args ? args.dnsServers : undefined;
            resourceInputs["idleTimeout"] = args ? args.idleTimeout : undefined;
            resourceInputs["incomingFilter"] = args ? args.incomingFilter : undefined;
            resourceInputs["insertQueueBefore"] = args ? args.insertQueueBefore : undefined;
            resourceInputs["interfaceList"] = args ? args.interfaceList : undefined;
            resourceInputs["localAddress"] = args ? args.localAddress : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["onDown"] = args ? args.onDown : undefined;
            resourceInputs["onUp"] = args ? args.onUp : undefined;
            resourceInputs["onlyOne"] = args ? args.onlyOne : undefined;
            resourceInputs["outgoingFilter"] = args ? args.outgoingFilter : undefined;
            resourceInputs["parentQueue"] = args ? args.parentQueue : undefined;
            resourceInputs["pppProfileId"] = args ? args.pppProfileId : undefined;
            resourceInputs["queueType"] = args ? args.queueType : undefined;
            resourceInputs["rateLimit"] = args ? args.rateLimit : undefined;
            resourceInputs["remoteAddress"] = args ? args.remoteAddress : undefined;
            resourceInputs["remoteIpv6PrefixPool"] = args ? args.remoteIpv6PrefixPool : undefined;
            resourceInputs["sessionTimeout"] = args ? args.sessionTimeout : undefined;
            resourceInputs["useCompression"] = args ? args.useCompression : undefined;
            resourceInputs["useEncryption"] = args ? args.useEncryption : undefined;
            resourceInputs["useIpv6"] = args ? args.useIpv6 : undefined;
            resourceInputs["useMpls"] = args ? args.useMpls : undefined;
            resourceInputs["useUpnp"] = args ? args.useUpnp : undefined;
            resourceInputs["winsServers"] = args ? args.winsServers : undefined;
            resourceInputs["default"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PppProfile.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}
exports.PppProfile = PppProfile;
/** @internal */
PppProfile.__pulumiType = 'routeros:index/pppProfile:PppProfile';
//# sourceMappingURL=pppProfile.js.map