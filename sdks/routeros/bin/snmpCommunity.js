"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SnmpCommunity = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
class SnmpCommunity extends pulumi.CustomResource {
    /**
     * Get an existing SnmpCommunity resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new SnmpCommunity(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of SnmpCommunity.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SnmpCommunity.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["___id_"] = state ? state.___id_ : undefined;
            resourceInputs["___path_"] = state ? state.___path_ : undefined;
            resourceInputs["addresses"] = state ? state.addresses : undefined;
            resourceInputs["authenticationPassword"] = state ? state.authenticationPassword : undefined;
            resourceInputs["authenticationProtocol"] = state ? state.authenticationProtocol : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["default"] = state ? state.default : undefined;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["encryptionPassword"] = state ? state.encryptionPassword : undefined;
            resourceInputs["encryptionProtocol"] = state ? state.encryptionProtocol : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["readAccess"] = state ? state.readAccess : undefined;
            resourceInputs["security"] = state ? state.security : undefined;
            resourceInputs["snmpCommunityId"] = state ? state.snmpCommunityId : undefined;
            resourceInputs["writeAccess"] = state ? state.writeAccess : undefined;
        }
        else {
            const args = argsOrState;
            resourceInputs["___id_"] = args ? args.___id_ : undefined;
            resourceInputs["___path_"] = args ? args.___path_ : undefined;
            resourceInputs["addresses"] = args ? args.addresses : undefined;
            resourceInputs["authenticationPassword"] = (args === null || args === void 0 ? void 0 : args.authenticationPassword) ? pulumi.secret(args.authenticationPassword) : undefined;
            resourceInputs["authenticationProtocol"] = args ? args.authenticationProtocol : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["encryptionPassword"] = (args === null || args === void 0 ? void 0 : args.encryptionPassword) ? pulumi.secret(args.encryptionPassword) : undefined;
            resourceInputs["encryptionProtocol"] = args ? args.encryptionProtocol : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["readAccess"] = args ? args.readAccess : undefined;
            resourceInputs["security"] = args ? args.security : undefined;
            resourceInputs["snmpCommunityId"] = args ? args.snmpCommunityId : undefined;
            resourceInputs["writeAccess"] = args ? args.writeAccess : undefined;
            resourceInputs["default"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["authenticationPassword", "encryptionPassword"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(SnmpCommunity.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}
exports.SnmpCommunity = SnmpCommunity;
/** @internal */
SnmpCommunity.__pulumiType = 'routeros:index/snmpCommunity:SnmpCommunity';
//# sourceMappingURL=snmpCommunity.js.map