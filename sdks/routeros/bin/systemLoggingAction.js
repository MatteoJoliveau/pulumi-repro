"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SystemLoggingAction = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
class SystemLoggingAction extends pulumi.CustomResource {
    /**
     * Get an existing SystemLoggingAction resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new SystemLoggingAction(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of SystemLoggingAction.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemLoggingAction.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["___id_"] = state ? state.___id_ : undefined;
            resourceInputs["___path_"] = state ? state.___path_ : undefined;
            resourceInputs["bsdSyslog"] = state ? state.bsdSyslog : undefined;
            resourceInputs["default"] = state ? state.default : undefined;
            resourceInputs["diskFileCount"] = state ? state.diskFileCount : undefined;
            resourceInputs["diskFileName"] = state ? state.diskFileName : undefined;
            resourceInputs["diskLinesPerFile"] = state ? state.diskLinesPerFile : undefined;
            resourceInputs["diskStopOnFull"] = state ? state.diskStopOnFull : undefined;
            resourceInputs["emailStartTls"] = state ? state.emailStartTls : undefined;
            resourceInputs["emailTo"] = state ? state.emailTo : undefined;
            resourceInputs["memoryLines"] = state ? state.memoryLines : undefined;
            resourceInputs["memoryStopOnFull"] = state ? state.memoryStopOnFull : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["remember"] = state ? state.remember : undefined;
            resourceInputs["remote"] = state ? state.remote : undefined;
            resourceInputs["remotePort"] = state ? state.remotePort : undefined;
            resourceInputs["srcAddress"] = state ? state.srcAddress : undefined;
            resourceInputs["syslogFacility"] = state ? state.syslogFacility : undefined;
            resourceInputs["syslogSeverity"] = state ? state.syslogSeverity : undefined;
            resourceInputs["syslogTimeFormat"] = state ? state.syslogTimeFormat : undefined;
            resourceInputs["systemLoggingActionId"] = state ? state.systemLoggingActionId : undefined;
            resourceInputs["target"] = state ? state.target : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.target === undefined) && !opts.urn) {
                throw new Error("Missing required property 'target'");
            }
            resourceInputs["___id_"] = args ? args.___id_ : undefined;
            resourceInputs["___path_"] = args ? args.___path_ : undefined;
            resourceInputs["bsdSyslog"] = args ? args.bsdSyslog : undefined;
            resourceInputs["diskFileCount"] = args ? args.diskFileCount : undefined;
            resourceInputs["diskFileName"] = args ? args.diskFileName : undefined;
            resourceInputs["diskLinesPerFile"] = args ? args.diskLinesPerFile : undefined;
            resourceInputs["diskStopOnFull"] = args ? args.diskStopOnFull : undefined;
            resourceInputs["emailStartTls"] = args ? args.emailStartTls : undefined;
            resourceInputs["emailTo"] = args ? args.emailTo : undefined;
            resourceInputs["memoryLines"] = args ? args.memoryLines : undefined;
            resourceInputs["memoryStopOnFull"] = args ? args.memoryStopOnFull : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["remember"] = args ? args.remember : undefined;
            resourceInputs["remote"] = args ? args.remote : undefined;
            resourceInputs["remotePort"] = args ? args.remotePort : undefined;
            resourceInputs["srcAddress"] = args ? args.srcAddress : undefined;
            resourceInputs["syslogFacility"] = args ? args.syslogFacility : undefined;
            resourceInputs["syslogSeverity"] = args ? args.syslogSeverity : undefined;
            resourceInputs["syslogTimeFormat"] = args ? args.syslogTimeFormat : undefined;
            resourceInputs["systemLoggingActionId"] = args ? args.systemLoggingActionId : undefined;
            resourceInputs["target"] = args ? args.target : undefined;
            resourceInputs["default"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemLoggingAction.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}
exports.SystemLoggingAction = SystemLoggingAction;
/** @internal */
SystemLoggingAction.__pulumiType = 'routeros:index/systemLoggingAction:SystemLoggingAction';
//# sourceMappingURL=systemLoggingAction.js.map