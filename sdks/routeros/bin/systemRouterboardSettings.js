"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.SystemRouterboardSettings = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
class SystemRouterboardSettings extends pulumi.CustomResource {
    /**
     * Get an existing SystemRouterboardSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new SystemRouterboardSettings(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of SystemRouterboardSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SystemRouterboardSettings.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["___id_"] = state ? state.___id_ : undefined;
            resourceInputs["___path_"] = state ? state.___path_ : undefined;
            resourceInputs["autoUpgrade"] = state ? state.autoUpgrade : undefined;
            resourceInputs["baudRate"] = state ? state.baudRate : undefined;
            resourceInputs["bootDelay"] = state ? state.bootDelay : undefined;
            resourceInputs["bootDevice"] = state ? state.bootDevice : undefined;
            resourceInputs["bootOs"] = state ? state.bootOs : undefined;
            resourceInputs["bootProtocol"] = state ? state.bootProtocol : undefined;
            resourceInputs["cpuFrequency"] = state ? state.cpuFrequency : undefined;
            resourceInputs["cpuMode"] = state ? state.cpuMode : undefined;
            resourceInputs["enableJumperReset"] = state ? state.enableJumperReset : undefined;
            resourceInputs["enterSetupOn"] = state ? state.enterSetupOn : undefined;
            resourceInputs["forceBackupBooter"] = state ? state.forceBackupBooter : undefined;
            resourceInputs["initDelay"] = state ? state.initDelay : undefined;
            resourceInputs["memoryDataRate"] = state ? state.memoryDataRate : undefined;
            resourceInputs["memoryFrequency"] = state ? state.memoryFrequency : undefined;
            resourceInputs["prebootEtherboot"] = state ? state.prebootEtherboot : undefined;
            resourceInputs["prebootEtherbootServer"] = state ? state.prebootEtherbootServer : undefined;
            resourceInputs["protectedRouterboot"] = state ? state.protectedRouterboot : undefined;
            resourceInputs["reformatHoldButton"] = state ? state.reformatHoldButton : undefined;
            resourceInputs["reformatHoldButtonMax"] = state ? state.reformatHoldButtonMax : undefined;
            resourceInputs["regulatoryDomainCe"] = state ? state.regulatoryDomainCe : undefined;
            resourceInputs["silentBoot"] = state ? state.silentBoot : undefined;
            resourceInputs["systemRouterboardSettingsId"] = state ? state.systemRouterboardSettingsId : undefined;
        }
        else {
            const args = argsOrState;
            resourceInputs["___id_"] = args ? args.___id_ : undefined;
            resourceInputs["___path_"] = args ? args.___path_ : undefined;
            resourceInputs["autoUpgrade"] = args ? args.autoUpgrade : undefined;
            resourceInputs["baudRate"] = args ? args.baudRate : undefined;
            resourceInputs["bootDelay"] = args ? args.bootDelay : undefined;
            resourceInputs["bootDevice"] = args ? args.bootDevice : undefined;
            resourceInputs["bootOs"] = args ? args.bootOs : undefined;
            resourceInputs["bootProtocol"] = args ? args.bootProtocol : undefined;
            resourceInputs["cpuFrequency"] = args ? args.cpuFrequency : undefined;
            resourceInputs["cpuMode"] = args ? args.cpuMode : undefined;
            resourceInputs["enableJumperReset"] = args ? args.enableJumperReset : undefined;
            resourceInputs["enterSetupOn"] = args ? args.enterSetupOn : undefined;
            resourceInputs["forceBackupBooter"] = args ? args.forceBackupBooter : undefined;
            resourceInputs["initDelay"] = args ? args.initDelay : undefined;
            resourceInputs["memoryDataRate"] = args ? args.memoryDataRate : undefined;
            resourceInputs["memoryFrequency"] = args ? args.memoryFrequency : undefined;
            resourceInputs["prebootEtherboot"] = args ? args.prebootEtherboot : undefined;
            resourceInputs["prebootEtherbootServer"] = args ? args.prebootEtherbootServer : undefined;
            resourceInputs["protectedRouterboot"] = args ? args.protectedRouterboot : undefined;
            resourceInputs["reformatHoldButton"] = args ? args.reformatHoldButton : undefined;
            resourceInputs["reformatHoldButtonMax"] = args ? args.reformatHoldButtonMax : undefined;
            resourceInputs["regulatoryDomainCe"] = args ? args.regulatoryDomainCe : undefined;
            resourceInputs["silentBoot"] = args ? args.silentBoot : undefined;
            resourceInputs["systemRouterboardSettingsId"] = args ? args.systemRouterboardSettingsId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SystemRouterboardSettings.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}
exports.SystemRouterboardSettings = SystemRouterboardSettings;
/** @internal */
SystemRouterboardSettings.__pulumiType = 'routeros:index/systemRouterboardSettings:SystemRouterboardSettings';
//# sourceMappingURL=systemRouterboardSettings.js.map