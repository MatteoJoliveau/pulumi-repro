"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.WifiChannel = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
class WifiChannel extends pulumi.CustomResource {
    /**
     * Get an existing WifiChannel resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new WifiChannel(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of WifiChannel.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WifiChannel.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["___id_"] = state ? state.___id_ : undefined;
            resourceInputs["___path_"] = state ? state.___path_ : undefined;
            resourceInputs["band"] = state ? state.band : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["frequencies"] = state ? state.frequencies : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["reselectInterval"] = state ? state.reselectInterval : undefined;
            resourceInputs["secondaryFrequencies"] = state ? state.secondaryFrequencies : undefined;
            resourceInputs["skipDfsChannels"] = state ? state.skipDfsChannels : undefined;
            resourceInputs["width"] = state ? state.width : undefined;
            resourceInputs["wifiChannelId"] = state ? state.wifiChannelId : undefined;
        }
        else {
            const args = argsOrState;
            resourceInputs["___id_"] = args ? args.___id_ : undefined;
            resourceInputs["___path_"] = args ? args.___path_ : undefined;
            resourceInputs["band"] = args ? args.band : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["frequencies"] = args ? args.frequencies : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["reselectInterval"] = args ? args.reselectInterval : undefined;
            resourceInputs["secondaryFrequencies"] = args ? args.secondaryFrequencies : undefined;
            resourceInputs["skipDfsChannels"] = args ? args.skipDfsChannels : undefined;
            resourceInputs["width"] = args ? args.width : undefined;
            resourceInputs["wifiChannelId"] = args ? args.wifiChannelId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WifiChannel.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}
exports.WifiChannel = WifiChannel;
/** @internal */
WifiChannel.__pulumiType = 'routeros:index/wifiChannel:WifiChannel';
//# sourceMappingURL=wifiChannel.js.map