"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.WifiConfiguration = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
class WifiConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing WifiConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new WifiConfiguration(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of WifiConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WifiConfiguration.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["___id_"] = state ? state.___id_ : undefined;
            resourceInputs["___path_"] = state ? state.___path_ : undefined;
            resourceInputs["___ts_"] = state ? state.___ts_ : undefined;
            resourceInputs["aaa"] = state ? state.aaa : undefined;
            resourceInputs["antennaGain"] = state ? state.antennaGain : undefined;
            resourceInputs["beaconInterval"] = state ? state.beaconInterval : undefined;
            resourceInputs["chains"] = state ? state.chains : undefined;
            resourceInputs["channel"] = state ? state.channel : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["country"] = state ? state.country : undefined;
            resourceInputs["datapath"] = state ? state.datapath : undefined;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["dtimPeriod"] = state ? state.dtimPeriod : undefined;
            resourceInputs["hideSsid"] = state ? state.hideSsid : undefined;
            resourceInputs["interworking"] = state ? state.interworking : undefined;
            resourceInputs["manager"] = state ? state.manager : undefined;
            resourceInputs["mode"] = state ? state.mode : undefined;
            resourceInputs["multicastEnhance"] = state ? state.multicastEnhance : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["qosClassifier"] = state ? state.qosClassifier : undefined;
            resourceInputs["security"] = state ? state.security : undefined;
            resourceInputs["ssid"] = state ? state.ssid : undefined;
            resourceInputs["steering"] = state ? state.steering : undefined;
            resourceInputs["txChains"] = state ? state.txChains : undefined;
            resourceInputs["txPower"] = state ? state.txPower : undefined;
            resourceInputs["wifiConfigurationId"] = state ? state.wifiConfigurationId : undefined;
        }
        else {
            const args = argsOrState;
            resourceInputs["___id_"] = args ? args.___id_ : undefined;
            resourceInputs["___path_"] = args ? args.___path_ : undefined;
            resourceInputs["___ts_"] = args ? args.___ts_ : undefined;
            resourceInputs["aaa"] = args ? args.aaa : undefined;
            resourceInputs["antennaGain"] = args ? args.antennaGain : undefined;
            resourceInputs["beaconInterval"] = args ? args.beaconInterval : undefined;
            resourceInputs["chains"] = args ? args.chains : undefined;
            resourceInputs["channel"] = args ? args.channel : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["country"] = args ? args.country : undefined;
            resourceInputs["datapath"] = args ? args.datapath : undefined;
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["dtimPeriod"] = args ? args.dtimPeriod : undefined;
            resourceInputs["hideSsid"] = args ? args.hideSsid : undefined;
            resourceInputs["interworking"] = args ? args.interworking : undefined;
            resourceInputs["manager"] = args ? args.manager : undefined;
            resourceInputs["mode"] = args ? args.mode : undefined;
            resourceInputs["multicastEnhance"] = args ? args.multicastEnhance : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["qosClassifier"] = args ? args.qosClassifier : undefined;
            resourceInputs["security"] = args ? args.security : undefined;
            resourceInputs["ssid"] = args ? args.ssid : undefined;
            resourceInputs["steering"] = args ? args.steering : undefined;
            resourceInputs["txChains"] = args ? args.txChains : undefined;
            resourceInputs["txPower"] = args ? args.txPower : undefined;
            resourceInputs["wifiConfigurationId"] = args ? args.wifiConfigurationId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WifiConfiguration.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}
exports.WifiConfiguration = WifiConfiguration;
/** @internal */
WifiConfiguration.__pulumiType = 'routeros:index/wifiConfiguration:WifiConfiguration';
//# sourceMappingURL=wifiConfiguration.js.map