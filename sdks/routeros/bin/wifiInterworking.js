"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.WifiInterworking = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
class WifiInterworking extends pulumi.CustomResource {
    /**
     * Get an existing WifiInterworking resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new WifiInterworking(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of WifiInterworking.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WifiInterworking.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["3gppInfos"] = state ? state['3gppInfos'] : undefined;
            resourceInputs["3gppRaw"] = state ? state['3gppRaw'] : undefined;
            resourceInputs["___id_"] = state ? state.___id_ : undefined;
            resourceInputs["___path_"] = state ? state.___path_ : undefined;
            resourceInputs["asra"] = state ? state.asra : undefined;
            resourceInputs["authenticationTypes"] = state ? state.authenticationTypes : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["connectionCapabilities"] = state ? state.connectionCapabilities : undefined;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["domainNames"] = state ? state.domainNames : undefined;
            resourceInputs["esr"] = state ? state.esr : undefined;
            resourceInputs["hessid"] = state ? state.hessid : undefined;
            resourceInputs["hotspot20"] = state ? state.hotspot20 : undefined;
            resourceInputs["hotspot20Dgaf"] = state ? state.hotspot20Dgaf : undefined;
            resourceInputs["internet"] = state ? state.internet : undefined;
            resourceInputs["ipv4Availability"] = state ? state.ipv4Availability : undefined;
            resourceInputs["ipv6Availability"] = state ? state.ipv6Availability : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["networkType"] = state ? state.networkType : undefined;
            resourceInputs["operationalClasses"] = state ? state.operationalClasses : undefined;
            resourceInputs["operatorNames"] = state ? state.operatorNames : undefined;
            resourceInputs["realms"] = state ? state.realms : undefined;
            resourceInputs["realmsRaws"] = state ? state.realmsRaws : undefined;
            resourceInputs["roamingOis"] = state ? state.roamingOis : undefined;
            resourceInputs["uesa"] = state ? state.uesa : undefined;
            resourceInputs["venue"] = state ? state.venue : undefined;
            resourceInputs["venueNames"] = state ? state.venueNames : undefined;
            resourceInputs["wanAtCapacity"] = state ? state.wanAtCapacity : undefined;
            resourceInputs["wanDownlink"] = state ? state.wanDownlink : undefined;
            resourceInputs["wanDownlinkLoad"] = state ? state.wanDownlinkLoad : undefined;
            resourceInputs["wanMeasurementDuration"] = state ? state.wanMeasurementDuration : undefined;
            resourceInputs["wanStatus"] = state ? state.wanStatus : undefined;
            resourceInputs["wanSymmetric"] = state ? state.wanSymmetric : undefined;
            resourceInputs["wanUplink"] = state ? state.wanUplink : undefined;
            resourceInputs["wanUplinkLoad"] = state ? state.wanUplinkLoad : undefined;
            resourceInputs["wifiInterworkingId"] = state ? state.wifiInterworkingId : undefined;
        }
        else {
            const args = argsOrState;
            resourceInputs["3gppInfos"] = args ? args['3gppInfos'] : undefined;
            resourceInputs["3gppRaw"] = args ? args['3gppRaw'] : undefined;
            resourceInputs["___id_"] = args ? args.___id_ : undefined;
            resourceInputs["___path_"] = args ? args.___path_ : undefined;
            resourceInputs["asra"] = args ? args.asra : undefined;
            resourceInputs["authenticationTypes"] = args ? args.authenticationTypes : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["connectionCapabilities"] = args ? args.connectionCapabilities : undefined;
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["domainNames"] = args ? args.domainNames : undefined;
            resourceInputs["esr"] = args ? args.esr : undefined;
            resourceInputs["hessid"] = args ? args.hessid : undefined;
            resourceInputs["hotspot20"] = args ? args.hotspot20 : undefined;
            resourceInputs["hotspot20Dgaf"] = args ? args.hotspot20Dgaf : undefined;
            resourceInputs["internet"] = args ? args.internet : undefined;
            resourceInputs["ipv4Availability"] = args ? args.ipv4Availability : undefined;
            resourceInputs["ipv6Availability"] = args ? args.ipv6Availability : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["networkType"] = args ? args.networkType : undefined;
            resourceInputs["operationalClasses"] = args ? args.operationalClasses : undefined;
            resourceInputs["operatorNames"] = args ? args.operatorNames : undefined;
            resourceInputs["realms"] = args ? args.realms : undefined;
            resourceInputs["realmsRaws"] = args ? args.realmsRaws : undefined;
            resourceInputs["roamingOis"] = args ? args.roamingOis : undefined;
            resourceInputs["uesa"] = args ? args.uesa : undefined;
            resourceInputs["venue"] = args ? args.venue : undefined;
            resourceInputs["venueNames"] = args ? args.venueNames : undefined;
            resourceInputs["wanAtCapacity"] = args ? args.wanAtCapacity : undefined;
            resourceInputs["wanDownlink"] = args ? args.wanDownlink : undefined;
            resourceInputs["wanDownlinkLoad"] = args ? args.wanDownlinkLoad : undefined;
            resourceInputs["wanMeasurementDuration"] = args ? args.wanMeasurementDuration : undefined;
            resourceInputs["wanStatus"] = args ? args.wanStatus : undefined;
            resourceInputs["wanSymmetric"] = args ? args.wanSymmetric : undefined;
            resourceInputs["wanUplink"] = args ? args.wanUplink : undefined;
            resourceInputs["wanUplinkLoad"] = args ? args.wanUplinkLoad : undefined;
            resourceInputs["wifiInterworkingId"] = args ? args.wifiInterworkingId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WifiInterworking.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}
exports.WifiInterworking = WifiInterworking;
/** @internal */
WifiInterworking.__pulumiType = 'routeros:index/wifiInterworking:WifiInterworking';
//# sourceMappingURL=wifiInterworking.js.map