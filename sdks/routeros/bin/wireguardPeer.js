"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.WireguardPeer = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
class WireguardPeer extends pulumi.CustomResource {
    /**
     * Get an existing WireguardPeer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new WireguardPeer(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of WireguardPeer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WireguardPeer.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["___id_"] = state ? state.___id_ : undefined;
            resourceInputs["___path_"] = state ? state.___path_ : undefined;
            resourceInputs["allowedAddresses"] = state ? state.allowedAddresses : undefined;
            resourceInputs["clientAddress"] = state ? state.clientAddress : undefined;
            resourceInputs["clientDns"] = state ? state.clientDns : undefined;
            resourceInputs["clientEndpoint"] = state ? state.clientEndpoint : undefined;
            resourceInputs["clientKeepalive"] = state ? state.clientKeepalive : undefined;
            resourceInputs["clientListenPort"] = state ? state.clientListenPort : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["currentEndpointAddress"] = state ? state.currentEndpointAddress : undefined;
            resourceInputs["currentEndpointPort"] = state ? state.currentEndpointPort : undefined;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["dynamic"] = state ? state.dynamic : undefined;
            resourceInputs["endpointAddress"] = state ? state.endpointAddress : undefined;
            resourceInputs["endpointPort"] = state ? state.endpointPort : undefined;
            resourceInputs["interface"] = state ? state.interface : undefined;
            resourceInputs["isResponder"] = state ? state.isResponder : undefined;
            resourceInputs["lastHandshake"] = state ? state.lastHandshake : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["persistentKeepalive"] = state ? state.persistentKeepalive : undefined;
            resourceInputs["presharedKey"] = state ? state.presharedKey : undefined;
            resourceInputs["privateKey"] = state ? state.privateKey : undefined;
            resourceInputs["publicKey"] = state ? state.publicKey : undefined;
            resourceInputs["rx"] = state ? state.rx : undefined;
            resourceInputs["tx"] = state ? state.tx : undefined;
            resourceInputs["wireguardPeerId"] = state ? state.wireguardPeerId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.allowedAddresses === undefined) && !opts.urn) {
                throw new Error("Missing required property 'allowedAddresses'");
            }
            if ((!args || args.interface === undefined) && !opts.urn) {
                throw new Error("Missing required property 'interface'");
            }
            if ((!args || args.publicKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'publicKey'");
            }
            resourceInputs["___id_"] = args ? args.___id_ : undefined;
            resourceInputs["___path_"] = args ? args.___path_ : undefined;
            resourceInputs["allowedAddresses"] = args ? args.allowedAddresses : undefined;
            resourceInputs["clientAddress"] = args ? args.clientAddress : undefined;
            resourceInputs["clientDns"] = args ? args.clientDns : undefined;
            resourceInputs["clientEndpoint"] = args ? args.clientEndpoint : undefined;
            resourceInputs["clientKeepalive"] = args ? args.clientKeepalive : undefined;
            resourceInputs["clientListenPort"] = args ? args.clientListenPort : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["endpointAddress"] = args ? args.endpointAddress : undefined;
            resourceInputs["endpointPort"] = args ? args.endpointPort : undefined;
            resourceInputs["interface"] = args ? args.interface : undefined;
            resourceInputs["isResponder"] = args ? args.isResponder : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["persistentKeepalive"] = args ? args.persistentKeepalive : undefined;
            resourceInputs["presharedKey"] = (args === null || args === void 0 ? void 0 : args.presharedKey) ? pulumi.secret(args.presharedKey) : undefined;
            resourceInputs["privateKey"] = args ? args.privateKey : undefined;
            resourceInputs["publicKey"] = args ? args.publicKey : undefined;
            resourceInputs["wireguardPeerId"] = args ? args.wireguardPeerId : undefined;
            resourceInputs["currentEndpointAddress"] = undefined /*out*/;
            resourceInputs["currentEndpointPort"] = undefined /*out*/;
            resourceInputs["dynamic"] = undefined /*out*/;
            resourceInputs["lastHandshake"] = undefined /*out*/;
            resourceInputs["rx"] = undefined /*out*/;
            resourceInputs["tx"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["presharedKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(WireguardPeer.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}
exports.WireguardPeer = WireguardPeer;
/** @internal */
WireguardPeer.__pulumiType = 'routeros:index/wireguardPeer:WireguardPeer';
//# sourceMappingURL=wireguardPeer.js.map