"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ZerotierController = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
class ZerotierController extends pulumi.CustomResource {
    /**
     * Get an existing ZerotierController resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ZerotierController(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ZerotierController.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ZerotierController.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["___id_"] = state ? state.___id_ : undefined;
            resourceInputs["___path_"] = state ? state.___path_ : undefined;
            resourceInputs["broadcast"] = state ? state.broadcast : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["inactive"] = state ? state.inactive : undefined;
            resourceInputs["instance"] = state ? state.instance : undefined;
            resourceInputs["ip66plane"] = state ? state.ip66plane : undefined;
            resourceInputs["ip6Range"] = state ? state.ip6Range : undefined;
            resourceInputs["ip6Rfc4193"] = state ? state.ip6Rfc4193 : undefined;
            resourceInputs["ipRange"] = state ? state.ipRange : undefined;
            resourceInputs["mtu"] = state ? state.mtu : undefined;
            resourceInputs["multicastLimit"] = state ? state.multicastLimit : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["network"] = state ? state.network : undefined;
            resourceInputs["private"] = state ? state.private : undefined;
            resourceInputs["routes"] = state ? state.routes : undefined;
            resourceInputs["zerotierControllerId"] = state ? state.zerotierControllerId : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.instance === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instance'");
            }
            if ((!args || args.network === undefined) && !opts.urn) {
                throw new Error("Missing required property 'network'");
            }
            resourceInputs["___id_"] = args ? args.___id_ : undefined;
            resourceInputs["___path_"] = args ? args.___path_ : undefined;
            resourceInputs["broadcast"] = args ? args.broadcast : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["instance"] = args ? args.instance : undefined;
            resourceInputs["ip66plane"] = args ? args.ip66plane : undefined;
            resourceInputs["ip6Range"] = args ? args.ip6Range : undefined;
            resourceInputs["ip6Rfc4193"] = args ? args.ip6Rfc4193 : undefined;
            resourceInputs["ipRange"] = args ? args.ipRange : undefined;
            resourceInputs["mtu"] = args ? args.mtu : undefined;
            resourceInputs["multicastLimit"] = args ? args.multicastLimit : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["network"] = args ? args.network : undefined;
            resourceInputs["private"] = args ? args.private : undefined;
            resourceInputs["routes"] = args ? args.routes : undefined;
            resourceInputs["zerotierControllerId"] = args ? args.zerotierControllerId : undefined;
            resourceInputs["inactive"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ZerotierController.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}
exports.ZerotierController = ZerotierController;
/** @internal */
ZerotierController.__pulumiType = 'routeros:index/zerotierController:ZerotierController';
//# sourceMappingURL=zerotierController.js.map