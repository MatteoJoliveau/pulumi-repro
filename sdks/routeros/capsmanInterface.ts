// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class CapsmanInterface extends pulumi.CustomResource {
    /**
     * Get an existing CapsmanInterface resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CapsmanInterfaceState, opts?: pulumi.CustomResourceOptions): CapsmanInterface {
        return new CapsmanInterface(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'routeros:index/capsmanInterface:CapsmanInterface';

    /**
     * Returns true if the given object is an instance of CapsmanInterface.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CapsmanInterface {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CapsmanInterface.__pulumiType;
    }

    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    public readonly ___id_!: pulumi.Output<number | undefined>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    public readonly ___path_!: pulumi.Output<string | undefined>;
    /**
     * <em>A set of transformations for field names. This is an internal service field, setting a value is not required.</em>
     */
    public readonly ___skip_!: pulumi.Output<string | undefined>;
    /**
     * <em>A set of transformations for field names. This is an internal service field, setting a value is not required.</em>
     */
    public readonly ___ts_!: pulumi.Output<string | undefined>;
    /**
     * ARP timeout is time how long ARP record is kept in ARP table after no packets are received from IP. Value auto equals to
     * the value of arp-timeout in IP/Settings, default is 30s. Can use postfix ms, s, M, h, d for milliseconds, seconds,
     * minutes, hours or days. If no postfix is set then seconds (s) is used.
     */
    public readonly arpTimeout!: pulumi.Output<string | undefined>;
    /**
     * A flag whether the interface is currently available for the CAPsMAN.
     */
    public /*out*/ readonly bound!: pulumi.Output<boolean>;
    public readonly capsmanInterfaceId!: pulumi.Output<string>;
    /**
     * Channel inline settings.
     */
    public readonly channel!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly comment!: pulumi.Output<string | undefined>;
    /**
     * Configuration inline settings.
     */
    public readonly configuration!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Datapath inline settings.
     */
    public readonly datapath!: pulumi.Output<{[key: string]: string} | undefined>;
    public readonly disabled!: pulumi.Output<boolean | undefined>;
    /**
     * A flag whether the interface is currently inactive.
     */
    public /*out*/ readonly inactive!: pulumi.Output<boolean>;
    /**
     * Layer2 Maximum transmission unit. [See](https://wiki.mikrotik.com/wiki/Maximum_Transmission_Unit_on_RouterBoards).
     */
    public /*out*/ readonly l2mtu!: pulumi.Output<number>;
    /**
     * MAC address (BSSID) to use for the interface.
     */
    public readonly macAddress!: pulumi.Output<string | undefined>;
    /**
     * A flag whether the interface is not a virtual one.
     */
    public /*out*/ readonly master!: pulumi.Output<boolean>;
    /**
     * The corresponding master interface of the virtual one.
     */
    public readonly masterInterface!: pulumi.Output<string | undefined>;
    /**
     * Name of the interface.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The MAC address of the associated radio.
     */
    public readonly radioMac!: pulumi.Output<string | undefined>;
    /**
     * Name of the associated radio.
     */
    public readonly radioName!: pulumi.Output<string | undefined>;
    /**
     * Rates inline settings.
     */
    public readonly rates!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * A flag whether the interface has established a link to another device.
     */
    public /*out*/ readonly running!: pulumi.Output<boolean>;
    /**
     * Security inline settings.
     */
    public readonly security!: pulumi.Output<{[key: string]: string} | undefined>;

    /**
     * Create a CapsmanInterface resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: CapsmanInterfaceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CapsmanInterfaceArgs | CapsmanInterfaceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CapsmanInterfaceState | undefined;
            resourceInputs["___id_"] = state ? state.___id_ : undefined;
            resourceInputs["___path_"] = state ? state.___path_ : undefined;
            resourceInputs["___skip_"] = state ? state.___skip_ : undefined;
            resourceInputs["___ts_"] = state ? state.___ts_ : undefined;
            resourceInputs["arpTimeout"] = state ? state.arpTimeout : undefined;
            resourceInputs["bound"] = state ? state.bound : undefined;
            resourceInputs["capsmanInterfaceId"] = state ? state.capsmanInterfaceId : undefined;
            resourceInputs["channel"] = state ? state.channel : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["configuration"] = state ? state.configuration : undefined;
            resourceInputs["datapath"] = state ? state.datapath : undefined;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["inactive"] = state ? state.inactive : undefined;
            resourceInputs["l2mtu"] = state ? state.l2mtu : undefined;
            resourceInputs["macAddress"] = state ? state.macAddress : undefined;
            resourceInputs["master"] = state ? state.master : undefined;
            resourceInputs["masterInterface"] = state ? state.masterInterface : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["radioMac"] = state ? state.radioMac : undefined;
            resourceInputs["radioName"] = state ? state.radioName : undefined;
            resourceInputs["rates"] = state ? state.rates : undefined;
            resourceInputs["running"] = state ? state.running : undefined;
            resourceInputs["security"] = state ? state.security : undefined;
        } else {
            const args = argsOrState as CapsmanInterfaceArgs | undefined;
            resourceInputs["___id_"] = args ? args.___id_ : undefined;
            resourceInputs["___path_"] = args ? args.___path_ : undefined;
            resourceInputs["___skip_"] = args ? args.___skip_ : undefined;
            resourceInputs["___ts_"] = args ? args.___ts_ : undefined;
            resourceInputs["arpTimeout"] = args ? args.arpTimeout : undefined;
            resourceInputs["capsmanInterfaceId"] = args ? args.capsmanInterfaceId : undefined;
            resourceInputs["channel"] = args ? args.channel : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["configuration"] = args ? args.configuration : undefined;
            resourceInputs["datapath"] = args ? args.datapath : undefined;
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["macAddress"] = args ? args.macAddress : undefined;
            resourceInputs["masterInterface"] = args ? args.masterInterface : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["radioMac"] = args ? args.radioMac : undefined;
            resourceInputs["radioName"] = args ? args.radioName : undefined;
            resourceInputs["rates"] = args ? args.rates : undefined;
            resourceInputs["security"] = args ? args.security : undefined;
            resourceInputs["bound"] = undefined /*out*/;
            resourceInputs["inactive"] = undefined /*out*/;
            resourceInputs["l2mtu"] = undefined /*out*/;
            resourceInputs["master"] = undefined /*out*/;
            resourceInputs["running"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CapsmanInterface.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering CapsmanInterface resources.
 */
export interface CapsmanInterfaceState {
    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    ___id_?: pulumi.Input<number>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    ___path_?: pulumi.Input<string>;
    /**
     * <em>A set of transformations for field names. This is an internal service field, setting a value is not required.</em>
     */
    ___skip_?: pulumi.Input<string>;
    /**
     * <em>A set of transformations for field names. This is an internal service field, setting a value is not required.</em>
     */
    ___ts_?: pulumi.Input<string>;
    /**
     * ARP timeout is time how long ARP record is kept in ARP table after no packets are received from IP. Value auto equals to
     * the value of arp-timeout in IP/Settings, default is 30s. Can use postfix ms, s, M, h, d for milliseconds, seconds,
     * minutes, hours or days. If no postfix is set then seconds (s) is used.
     */
    arpTimeout?: pulumi.Input<string>;
    /**
     * A flag whether the interface is currently available for the CAPsMAN.
     */
    bound?: pulumi.Input<boolean>;
    capsmanInterfaceId?: pulumi.Input<string>;
    /**
     * Channel inline settings.
     */
    channel?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    comment?: pulumi.Input<string>;
    /**
     * Configuration inline settings.
     */
    configuration?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Datapath inline settings.
     */
    datapath?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    disabled?: pulumi.Input<boolean>;
    /**
     * A flag whether the interface is currently inactive.
     */
    inactive?: pulumi.Input<boolean>;
    /**
     * Layer2 Maximum transmission unit. [See](https://wiki.mikrotik.com/wiki/Maximum_Transmission_Unit_on_RouterBoards).
     */
    l2mtu?: pulumi.Input<number>;
    /**
     * MAC address (BSSID) to use for the interface.
     */
    macAddress?: pulumi.Input<string>;
    /**
     * A flag whether the interface is not a virtual one.
     */
    master?: pulumi.Input<boolean>;
    /**
     * The corresponding master interface of the virtual one.
     */
    masterInterface?: pulumi.Input<string>;
    /**
     * Name of the interface.
     */
    name?: pulumi.Input<string>;
    /**
     * The MAC address of the associated radio.
     */
    radioMac?: pulumi.Input<string>;
    /**
     * Name of the associated radio.
     */
    radioName?: pulumi.Input<string>;
    /**
     * Rates inline settings.
     */
    rates?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * A flag whether the interface has established a link to another device.
     */
    running?: pulumi.Input<boolean>;
    /**
     * Security inline settings.
     */
    security?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}

/**
 * The set of arguments for constructing a CapsmanInterface resource.
 */
export interface CapsmanInterfaceArgs {
    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    ___id_?: pulumi.Input<number>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    ___path_?: pulumi.Input<string>;
    /**
     * <em>A set of transformations for field names. This is an internal service field, setting a value is not required.</em>
     */
    ___skip_?: pulumi.Input<string>;
    /**
     * <em>A set of transformations for field names. This is an internal service field, setting a value is not required.</em>
     */
    ___ts_?: pulumi.Input<string>;
    /**
     * ARP timeout is time how long ARP record is kept in ARP table after no packets are received from IP. Value auto equals to
     * the value of arp-timeout in IP/Settings, default is 30s. Can use postfix ms, s, M, h, d for milliseconds, seconds,
     * minutes, hours or days. If no postfix is set then seconds (s) is used.
     */
    arpTimeout?: pulumi.Input<string>;
    capsmanInterfaceId?: pulumi.Input<string>;
    /**
     * Channel inline settings.
     */
    channel?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    comment?: pulumi.Input<string>;
    /**
     * Configuration inline settings.
     */
    configuration?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Datapath inline settings.
     */
    datapath?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    disabled?: pulumi.Input<boolean>;
    /**
     * MAC address (BSSID) to use for the interface.
     */
    macAddress?: pulumi.Input<string>;
    /**
     * The corresponding master interface of the virtual one.
     */
    masterInterface?: pulumi.Input<string>;
    /**
     * Name of the interface.
     */
    name?: pulumi.Input<string>;
    /**
     * The MAC address of the associated radio.
     */
    radioMac?: pulumi.Input<string>;
    /**
     * Name of the associated radio.
     */
    radioName?: pulumi.Input<string>;
    /**
     * Rates inline settings.
     */
    rates?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Security inline settings.
     */
    security?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
}
