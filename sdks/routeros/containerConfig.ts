// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ContainerConfig extends pulumi.CustomResource {
    /**
     * Get an existing ContainerConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ContainerConfigState, opts?: pulumi.CustomResourceOptions): ContainerConfig {
        return new ContainerConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'routeros:index/containerConfig:ContainerConfig';

    /**
     * Returns true if the given object is an instance of ContainerConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ContainerConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ContainerConfig.__pulumiType;
    }

    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    public readonly ___id_!: pulumi.Output<number | undefined>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    public readonly ___path_!: pulumi.Output<string | undefined>;
    public readonly containerConfigId!: pulumi.Output<string>;
    /**
     * Container layers directory.
     */
    public readonly layerDir!: pulumi.Output<string | undefined>;
    /**
     * Specifies the password for authentication (starting from ROS 7.8)
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * RAM usage limit. (0 for unlimited)
     */
    public readonly ramHigh!: pulumi.Output<string | undefined>;
    /**
     * External registry url from where the container will be downloaded.
     */
    public readonly registryUrl!: pulumi.Output<string | undefined>;
    /**
     * Container extraction directory.
     */
    public readonly tmpdir!: pulumi.Output<string | undefined>;
    /**
     * Specifies the username for authentication (starting from ROS 7.8)
     */
    public readonly username!: pulumi.Output<string | undefined>;

    /**
     * Create a ContainerConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ContainerConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ContainerConfigArgs | ContainerConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ContainerConfigState | undefined;
            resourceInputs["___id_"] = state ? state.___id_ : undefined;
            resourceInputs["___path_"] = state ? state.___path_ : undefined;
            resourceInputs["containerConfigId"] = state ? state.containerConfigId : undefined;
            resourceInputs["layerDir"] = state ? state.layerDir : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["ramHigh"] = state ? state.ramHigh : undefined;
            resourceInputs["registryUrl"] = state ? state.registryUrl : undefined;
            resourceInputs["tmpdir"] = state ? state.tmpdir : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
        } else {
            const args = argsOrState as ContainerConfigArgs | undefined;
            resourceInputs["___id_"] = args ? args.___id_ : undefined;
            resourceInputs["___path_"] = args ? args.___path_ : undefined;
            resourceInputs["containerConfigId"] = args ? args.containerConfigId : undefined;
            resourceInputs["layerDir"] = args ? args.layerDir : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["ramHigh"] = args ? args.ramHigh : undefined;
            resourceInputs["registryUrl"] = args ? args.registryUrl : undefined;
            resourceInputs["tmpdir"] = args ? args.tmpdir : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ContainerConfig.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ContainerConfig resources.
 */
export interface ContainerConfigState {
    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    ___id_?: pulumi.Input<number>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    ___path_?: pulumi.Input<string>;
    containerConfigId?: pulumi.Input<string>;
    /**
     * Container layers directory.
     */
    layerDir?: pulumi.Input<string>;
    /**
     * Specifies the password for authentication (starting from ROS 7.8)
     */
    password?: pulumi.Input<string>;
    /**
     * RAM usage limit. (0 for unlimited)
     */
    ramHigh?: pulumi.Input<string>;
    /**
     * External registry url from where the container will be downloaded.
     */
    registryUrl?: pulumi.Input<string>;
    /**
     * Container extraction directory.
     */
    tmpdir?: pulumi.Input<string>;
    /**
     * Specifies the username for authentication (starting from ROS 7.8)
     */
    username?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ContainerConfig resource.
 */
export interface ContainerConfigArgs {
    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    ___id_?: pulumi.Input<number>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    ___path_?: pulumi.Input<string>;
    containerConfigId?: pulumi.Input<string>;
    /**
     * Container layers directory.
     */
    layerDir?: pulumi.Input<string>;
    /**
     * Specifies the password for authentication (starting from ROS 7.8)
     */
    password?: pulumi.Input<string>;
    /**
     * RAM usage limit. (0 for unlimited)
     */
    ramHigh?: pulumi.Input<string>;
    /**
     * External registry url from where the container will be downloaded.
     */
    registryUrl?: pulumi.Input<string>;
    /**
     * Container extraction directory.
     */
    tmpdir?: pulumi.Input<string>;
    /**
     * Specifies the username for authentication (starting from ROS 7.8)
     */
    username?: pulumi.Input<string>;
}
