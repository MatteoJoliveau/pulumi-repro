// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class IpHotspotWalledGarden extends pulumi.CustomResource {
    /**
     * Get an existing IpHotspotWalledGarden resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IpHotspotWalledGardenState, opts?: pulumi.CustomResourceOptions): IpHotspotWalledGarden {
        return new IpHotspotWalledGarden(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'routeros:index/ipHotspotWalledGarden:IpHotspotWalledGarden';

    /**
     * Returns true if the given object is an instance of IpHotspotWalledGarden.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IpHotspotWalledGarden {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IpHotspotWalledGarden.__pulumiType;
    }

    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    public readonly ___id_!: pulumi.Output<number | undefined>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    public readonly ___path_!: pulumi.Output<string | undefined>;
    /**
     * <em>A set of transformations for field names. This is an internal service field, setting a value is not required.</em>
     */
    public readonly ___skip_!: pulumi.Output<string | undefined>;
    /**
     * Action to perform, when packet matches the rule `allow` - allow access to the web-page without authorization, `deny` -
     * the authorization is required to access the web-page.
     */
    public readonly action!: pulumi.Output<string | undefined>;
    public readonly comment!: pulumi.Output<string | undefined>;
    public readonly disabled!: pulumi.Output<boolean | undefined>;
    /**
     * Domain name of the destination web-server.
     */
    public readonly dstHost!: pulumi.Output<string | undefined>;
    /**
     * TCP port number, client sends request to.
     */
    public readonly dstPort!: pulumi.Output<string | undefined>;
    /**
     * Configuration item created by software, not by management interface. It is not exported, and cannot be directly
     * modified.
     */
    public /*out*/ readonly dynamic!: pulumi.Output<boolean>;
    public readonly ipHotspotWalledGardenId!: pulumi.Output<string>;
    /**
     * HTTP method of the request.
     */
    public readonly method!: pulumi.Output<string | undefined>;
    /**
     * The path of the request, path comes after `http://dst_host/`.
     */
    public readonly path!: pulumi.Output<string | undefined>;
    /**
     * Name of the HotSpot server, rule is applied to.
     */
    public readonly server!: pulumi.Output<string | undefined>;
    /**
     * Source address of the user, usually IP address of the HotSpot client.
     */
    public readonly srcAddress!: pulumi.Output<string | undefined>;

    /**
     * Create a IpHotspotWalledGarden resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: IpHotspotWalledGardenArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IpHotspotWalledGardenArgs | IpHotspotWalledGardenState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IpHotspotWalledGardenState | undefined;
            resourceInputs["___id_"] = state ? state.___id_ : undefined;
            resourceInputs["___path_"] = state ? state.___path_ : undefined;
            resourceInputs["___skip_"] = state ? state.___skip_ : undefined;
            resourceInputs["action"] = state ? state.action : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["dstHost"] = state ? state.dstHost : undefined;
            resourceInputs["dstPort"] = state ? state.dstPort : undefined;
            resourceInputs["dynamic"] = state ? state.dynamic : undefined;
            resourceInputs["ipHotspotWalledGardenId"] = state ? state.ipHotspotWalledGardenId : undefined;
            resourceInputs["method"] = state ? state.method : undefined;
            resourceInputs["path"] = state ? state.path : undefined;
            resourceInputs["server"] = state ? state.server : undefined;
            resourceInputs["srcAddress"] = state ? state.srcAddress : undefined;
        } else {
            const args = argsOrState as IpHotspotWalledGardenArgs | undefined;
            resourceInputs["___id_"] = args ? args.___id_ : undefined;
            resourceInputs["___path_"] = args ? args.___path_ : undefined;
            resourceInputs["___skip_"] = args ? args.___skip_ : undefined;
            resourceInputs["action"] = args ? args.action : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["dstHost"] = args ? args.dstHost : undefined;
            resourceInputs["dstPort"] = args ? args.dstPort : undefined;
            resourceInputs["ipHotspotWalledGardenId"] = args ? args.ipHotspotWalledGardenId : undefined;
            resourceInputs["method"] = args ? args.method : undefined;
            resourceInputs["path"] = args ? args.path : undefined;
            resourceInputs["server"] = args ? args.server : undefined;
            resourceInputs["srcAddress"] = args ? args.srcAddress : undefined;
            resourceInputs["dynamic"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IpHotspotWalledGarden.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IpHotspotWalledGarden resources.
 */
export interface IpHotspotWalledGardenState {
    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    ___id_?: pulumi.Input<number>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    ___path_?: pulumi.Input<string>;
    /**
     * <em>A set of transformations for field names. This is an internal service field, setting a value is not required.</em>
     */
    ___skip_?: pulumi.Input<string>;
    /**
     * Action to perform, when packet matches the rule `allow` - allow access to the web-page without authorization, `deny` -
     * the authorization is required to access the web-page.
     */
    action?: pulumi.Input<string>;
    comment?: pulumi.Input<string>;
    disabled?: pulumi.Input<boolean>;
    /**
     * Domain name of the destination web-server.
     */
    dstHost?: pulumi.Input<string>;
    /**
     * TCP port number, client sends request to.
     */
    dstPort?: pulumi.Input<string>;
    /**
     * Configuration item created by software, not by management interface. It is not exported, and cannot be directly
     * modified.
     */
    dynamic?: pulumi.Input<boolean>;
    ipHotspotWalledGardenId?: pulumi.Input<string>;
    /**
     * HTTP method of the request.
     */
    method?: pulumi.Input<string>;
    /**
     * The path of the request, path comes after `http://dst_host/`.
     */
    path?: pulumi.Input<string>;
    /**
     * Name of the HotSpot server, rule is applied to.
     */
    server?: pulumi.Input<string>;
    /**
     * Source address of the user, usually IP address of the HotSpot client.
     */
    srcAddress?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IpHotspotWalledGarden resource.
 */
export interface IpHotspotWalledGardenArgs {
    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    ___id_?: pulumi.Input<number>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    ___path_?: pulumi.Input<string>;
    /**
     * <em>A set of transformations for field names. This is an internal service field, setting a value is not required.</em>
     */
    ___skip_?: pulumi.Input<string>;
    /**
     * Action to perform, when packet matches the rule `allow` - allow access to the web-page without authorization, `deny` -
     * the authorization is required to access the web-page.
     */
    action?: pulumi.Input<string>;
    comment?: pulumi.Input<string>;
    disabled?: pulumi.Input<boolean>;
    /**
     * Domain name of the destination web-server.
     */
    dstHost?: pulumi.Input<string>;
    /**
     * TCP port number, client sends request to.
     */
    dstPort?: pulumi.Input<string>;
    ipHotspotWalledGardenId?: pulumi.Input<string>;
    /**
     * HTTP method of the request.
     */
    method?: pulumi.Input<string>;
    /**
     * The path of the request, path comes after `http://dst_host/`.
     */
    path?: pulumi.Input<string>;
    /**
     * Name of the HotSpot server, rule is applied to.
     */
    server?: pulumi.Input<string>;
    /**
     * Source address of the user, usually IP address of the HotSpot client.
     */
    srcAddress?: pulumi.Input<string>;
}
