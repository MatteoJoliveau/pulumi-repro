// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class IpIpsecProposal extends pulumi.CustomResource {
    /**
     * Get an existing IpIpsecProposal resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IpIpsecProposalState, opts?: pulumi.CustomResourceOptions): IpIpsecProposal {
        return new IpIpsecProposal(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'routeros:index/ipIpsecProposal:IpIpsecProposal';

    /**
     * Returns true if the given object is an instance of IpIpsecProposal.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IpIpsecProposal {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IpIpsecProposal.__pulumiType;
    }

    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    public readonly ___id_!: pulumi.Output<number | undefined>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    public readonly ___path_!: pulumi.Output<string | undefined>;
    /**
     * Allowed algorithms for authorization. SHA (Secure Hash Algorithm) is stronger but slower. MD5 uses a 128-bit key,
     * sha1-160bit key.
     */
    public readonly authAlgorithms!: pulumi.Output<string[] | undefined>;
    public readonly comment!: pulumi.Output<string | undefined>;
    /**
     * It's the default item.
     */
    public /*out*/ readonly default!: pulumi.Output<boolean>;
    public readonly disabled!: pulumi.Output<boolean | undefined>;
    /**
     * Allowed algorithms and key lengths to use for SAs.
     */
    public readonly encAlgorithms!: pulumi.Output<string[] | undefined>;
    public readonly ipIpsecProposalId!: pulumi.Output<string>;
    /**
     * How long to use SA before throwing it out.
     */
    public readonly lifetime!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    /**
     * The diffie-Helman group used for Perfect Forward Secrecy.
     */
    public readonly pfsGroup!: pulumi.Output<string | undefined>;

    /**
     * Create a IpIpsecProposal resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: IpIpsecProposalArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IpIpsecProposalArgs | IpIpsecProposalState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IpIpsecProposalState | undefined;
            resourceInputs["___id_"] = state ? state.___id_ : undefined;
            resourceInputs["___path_"] = state ? state.___path_ : undefined;
            resourceInputs["authAlgorithms"] = state ? state.authAlgorithms : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["default"] = state ? state.default : undefined;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["encAlgorithms"] = state ? state.encAlgorithms : undefined;
            resourceInputs["ipIpsecProposalId"] = state ? state.ipIpsecProposalId : undefined;
            resourceInputs["lifetime"] = state ? state.lifetime : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["pfsGroup"] = state ? state.pfsGroup : undefined;
        } else {
            const args = argsOrState as IpIpsecProposalArgs | undefined;
            resourceInputs["___id_"] = args ? args.___id_ : undefined;
            resourceInputs["___path_"] = args ? args.___path_ : undefined;
            resourceInputs["authAlgorithms"] = args ? args.authAlgorithms : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["encAlgorithms"] = args ? args.encAlgorithms : undefined;
            resourceInputs["ipIpsecProposalId"] = args ? args.ipIpsecProposalId : undefined;
            resourceInputs["lifetime"] = args ? args.lifetime : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["pfsGroup"] = args ? args.pfsGroup : undefined;
            resourceInputs["default"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IpIpsecProposal.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering IpIpsecProposal resources.
 */
export interface IpIpsecProposalState {
    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    ___id_?: pulumi.Input<number>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    ___path_?: pulumi.Input<string>;
    /**
     * Allowed algorithms for authorization. SHA (Secure Hash Algorithm) is stronger but slower. MD5 uses a 128-bit key,
     * sha1-160bit key.
     */
    authAlgorithms?: pulumi.Input<pulumi.Input<string>[]>;
    comment?: pulumi.Input<string>;
    /**
     * It's the default item.
     */
    default?: pulumi.Input<boolean>;
    disabled?: pulumi.Input<boolean>;
    /**
     * Allowed algorithms and key lengths to use for SAs.
     */
    encAlgorithms?: pulumi.Input<pulumi.Input<string>[]>;
    ipIpsecProposalId?: pulumi.Input<string>;
    /**
     * How long to use SA before throwing it out.
     */
    lifetime?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * The diffie-Helman group used for Perfect Forward Secrecy.
     */
    pfsGroup?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IpIpsecProposal resource.
 */
export interface IpIpsecProposalArgs {
    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    ___id_?: pulumi.Input<number>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    ___path_?: pulumi.Input<string>;
    /**
     * Allowed algorithms for authorization. SHA (Secure Hash Algorithm) is stronger but slower. MD5 uses a 128-bit key,
     * sha1-160bit key.
     */
    authAlgorithms?: pulumi.Input<pulumi.Input<string>[]>;
    comment?: pulumi.Input<string>;
    disabled?: pulumi.Input<boolean>;
    /**
     * Allowed algorithms and key lengths to use for SAs.
     */
    encAlgorithms?: pulumi.Input<pulumi.Input<string>[]>;
    ipIpsecProposalId?: pulumi.Input<string>;
    /**
     * How long to use SA before throwing it out.
     */
    lifetime?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * The diffie-Helman group used for Perfect Forward Secrecy.
     */
    pfsGroup?: pulumi.Input<string>;
}
