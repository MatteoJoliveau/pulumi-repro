// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Ipv6FirewallAddrList extends pulumi.CustomResource {
    /**
     * Get an existing Ipv6FirewallAddrList resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Ipv6FirewallAddrListState, opts?: pulumi.CustomResourceOptions): Ipv6FirewallAddrList {
        return new Ipv6FirewallAddrList(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'routeros:index/ipv6FirewallAddrList:Ipv6FirewallAddrList';

    /**
     * Returns true if the given object is an instance of Ipv6FirewallAddrList.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Ipv6FirewallAddrList {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Ipv6FirewallAddrList.__pulumiType;
    }

    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    public readonly ___id_!: pulumi.Output<number | undefined>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    public readonly ___path_!: pulumi.Output<string | undefined>;
    /**
     * A single IPv6 address or IPv6 CIDR subnet
     */
    public readonly address!: pulumi.Output<string>;
    public readonly comment!: pulumi.Output<string | undefined>;
    /**
     * Rule creation time
     */
    public /*out*/ readonly creationTime!: pulumi.Output<string>;
    public readonly disabled!: pulumi.Output<boolean | undefined>;
    /**
     * Configuration item created by software, not by management interface. It is not exported, and cannot be directly
     * modified.
     */
    public /*out*/ readonly dynamic!: pulumi.Output<boolean>;
    public readonly ipv6FirewallAddrListId!: pulumi.Output<string>;
    /**
     * Name for the address list of the added IPv6 address.
     */
    public readonly list!: pulumi.Output<string>;
    public readonly timeout!: pulumi.Output<string | undefined>;

    /**
     * Create a Ipv6FirewallAddrList resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Ipv6FirewallAddrListArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Ipv6FirewallAddrListArgs | Ipv6FirewallAddrListState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Ipv6FirewallAddrListState | undefined;
            resourceInputs["___id_"] = state ? state.___id_ : undefined;
            resourceInputs["___path_"] = state ? state.___path_ : undefined;
            resourceInputs["address"] = state ? state.address : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["creationTime"] = state ? state.creationTime : undefined;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["dynamic"] = state ? state.dynamic : undefined;
            resourceInputs["ipv6FirewallAddrListId"] = state ? state.ipv6FirewallAddrListId : undefined;
            resourceInputs["list"] = state ? state.list : undefined;
            resourceInputs["timeout"] = state ? state.timeout : undefined;
        } else {
            const args = argsOrState as Ipv6FirewallAddrListArgs | undefined;
            if ((!args || args.address === undefined) && !opts.urn) {
                throw new Error("Missing required property 'address'");
            }
            if ((!args || args.list === undefined) && !opts.urn) {
                throw new Error("Missing required property 'list'");
            }
            resourceInputs["___id_"] = args ? args.___id_ : undefined;
            resourceInputs["___path_"] = args ? args.___path_ : undefined;
            resourceInputs["address"] = args ? args.address : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["ipv6FirewallAddrListId"] = args ? args.ipv6FirewallAddrListId : undefined;
            resourceInputs["list"] = args ? args.list : undefined;
            resourceInputs["timeout"] = args ? args.timeout : undefined;
            resourceInputs["creationTime"] = undefined /*out*/;
            resourceInputs["dynamic"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Ipv6FirewallAddrList.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Ipv6FirewallAddrList resources.
 */
export interface Ipv6FirewallAddrListState {
    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    ___id_?: pulumi.Input<number>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    ___path_?: pulumi.Input<string>;
    /**
     * A single IPv6 address or IPv6 CIDR subnet
     */
    address?: pulumi.Input<string>;
    comment?: pulumi.Input<string>;
    /**
     * Rule creation time
     */
    creationTime?: pulumi.Input<string>;
    disabled?: pulumi.Input<boolean>;
    /**
     * Configuration item created by software, not by management interface. It is not exported, and cannot be directly
     * modified.
     */
    dynamic?: pulumi.Input<boolean>;
    ipv6FirewallAddrListId?: pulumi.Input<string>;
    /**
     * Name for the address list of the added IPv6 address.
     */
    list?: pulumi.Input<string>;
    timeout?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Ipv6FirewallAddrList resource.
 */
export interface Ipv6FirewallAddrListArgs {
    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    ___id_?: pulumi.Input<number>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    ___path_?: pulumi.Input<string>;
    /**
     * A single IPv6 address or IPv6 CIDR subnet
     */
    address: pulumi.Input<string>;
    comment?: pulumi.Input<string>;
    disabled?: pulumi.Input<boolean>;
    ipv6FirewallAddrListId?: pulumi.Input<string>;
    /**
     * Name for the address list of the added IPv6 address.
     */
    list: pulumi.Input<string>;
    timeout?: pulumi.Input<string>;
}
