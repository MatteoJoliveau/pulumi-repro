// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class MoveItems extends pulumi.CustomResource {
    /**
     * Get an existing MoveItems resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MoveItemsState, opts?: pulumi.CustomResourceOptions): MoveItems {
        return new MoveItems(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'routeros:index/moveItems:MoveItems';

    /**
     * Returns true if the given object is an instance of MoveItems.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MoveItems {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MoveItems.__pulumiType;
    }

    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    public readonly ___id_!: pulumi.Output<number | undefined>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    public readonly ___path_!: pulumi.Output<string | undefined>;
    public readonly moveItemsId!: pulumi.Output<string>;
    /**
     * Resource name in the notation ```routeros.IpFirewallFilter```.
     */
    public readonly resourceName!: pulumi.Output<string | undefined>;
    /**
     * URL path of the resource in the notation ```/ip/firewall/filter```.
     */
    public readonly resourcePath!: pulumi.Output<string | undefined>;
    /**
     * List identifiers in the required sequence. To locate the ```sequence``` before an existing rule, add its ```id``` to the
     * last element of the ```sequence```.
     */
    public readonly sequences!: pulumi.Output<string[]>;

    /**
     * Create a MoveItems resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MoveItemsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MoveItemsArgs | MoveItemsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MoveItemsState | undefined;
            resourceInputs["___id_"] = state ? state.___id_ : undefined;
            resourceInputs["___path_"] = state ? state.___path_ : undefined;
            resourceInputs["moveItemsId"] = state ? state.moveItemsId : undefined;
            resourceInputs["resourceName"] = state ? state.resourceName : undefined;
            resourceInputs["resourcePath"] = state ? state.resourcePath : undefined;
            resourceInputs["sequences"] = state ? state.sequences : undefined;
        } else {
            const args = argsOrState as MoveItemsArgs | undefined;
            if ((!args || args.sequences === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sequences'");
            }
            resourceInputs["___id_"] = args ? args.___id_ : undefined;
            resourceInputs["___path_"] = args ? args.___path_ : undefined;
            resourceInputs["moveItemsId"] = args ? args.moveItemsId : undefined;
            resourceInputs["resourceName"] = args ? args.resourceName : undefined;
            resourceInputs["resourcePath"] = args ? args.resourcePath : undefined;
            resourceInputs["sequences"] = args ? args.sequences : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MoveItems.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering MoveItems resources.
 */
export interface MoveItemsState {
    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    ___id_?: pulumi.Input<number>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    ___path_?: pulumi.Input<string>;
    moveItemsId?: pulumi.Input<string>;
    /**
     * Resource name in the notation ```routeros.IpFirewallFilter```.
     */
    resourceName?: pulumi.Input<string>;
    /**
     * URL path of the resource in the notation ```/ip/firewall/filter```.
     */
    resourcePath?: pulumi.Input<string>;
    /**
     * List identifiers in the required sequence. To locate the ```sequence``` before an existing rule, add its ```id``` to the
     * last element of the ```sequence```.
     */
    sequences?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a MoveItems resource.
 */
export interface MoveItemsArgs {
    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    ___id_?: pulumi.Input<number>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    ___path_?: pulumi.Input<string>;
    moveItemsId?: pulumi.Input<string>;
    /**
     * Resource name in the notation ```routeros.IpFirewallFilter```.
     */
    resourceName?: pulumi.Input<string>;
    /**
     * URL path of the resource in the notation ```/ip/firewall/filter```.
     */
    resourcePath?: pulumi.Input<string>;
    /**
     * List identifiers in the required sequence. To locate the ```sequence``` before an existing rule, add its ```id``` to the
     * last element of the ```sequence```.
     */
    sequences: pulumi.Input<pulumi.Input<string>[]>;
}
