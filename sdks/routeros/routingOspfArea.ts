// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class RoutingOspfArea extends pulumi.CustomResource {
    /**
     * Get an existing RoutingOspfArea resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RoutingOspfAreaState, opts?: pulumi.CustomResourceOptions): RoutingOspfArea {
        return new RoutingOspfArea(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'routeros:index/routingOspfArea:RoutingOspfArea';

    /**
     * Returns true if the given object is an instance of RoutingOspfArea.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RoutingOspfArea {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RoutingOspfArea.__pulumiType;
    }

    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    public readonly ___id_!: pulumi.Output<number | undefined>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    public readonly ___path_!: pulumi.Output<string | undefined>;
    /**
     * <em>A set of fields that require setting/unsetting. This is an internal service field, setting a value is not
     * required.</em>
     */
    public readonly ___unset_!: pulumi.Output<string | undefined>;
    /**
     * OSPF area identifier.
     */
    public readonly areaId!: pulumi.Output<string | undefined>;
    public readonly comment!: pulumi.Output<string | undefined>;
    /**
     * Default cost of injected LSAs into the area.
     */
    public readonly defaultCost!: pulumi.Output<number | undefined>;
    public readonly disabled!: pulumi.Output<boolean | undefined>;
    public /*out*/ readonly inactive!: pulumi.Output<boolean>;
    /**
     * Name of the OSPF instance this area belongs to.
     */
    public readonly instance!: pulumi.Output<string>;
    public readonly name!: pulumi.Output<string>;
    /**
     * If set then the area will not flood summary LSAs in the stub area. <em>The correct value of this attribute may not be
     * displayed in Winbox. Please check the parameters in the console!</em>
     */
    public readonly noSummaries!: pulumi.Output<boolean | undefined>;
    /**
     * The parameter indicates which ABR will be used as a translator from type7 to type5 LSA.
     */
    public readonly nssaTranslate!: pulumi.Output<string | undefined>;
    public readonly routingOspfAreaId!: pulumi.Output<string>;
    /**
     * The area type.
     */
    public readonly type!: pulumi.Output<string | undefined>;

    /**
     * Create a RoutingOspfArea resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RoutingOspfAreaArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RoutingOspfAreaArgs | RoutingOspfAreaState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RoutingOspfAreaState | undefined;
            resourceInputs["___id_"] = state ? state.___id_ : undefined;
            resourceInputs["___path_"] = state ? state.___path_ : undefined;
            resourceInputs["___unset_"] = state ? state.___unset_ : undefined;
            resourceInputs["areaId"] = state ? state.areaId : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["defaultCost"] = state ? state.defaultCost : undefined;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["inactive"] = state ? state.inactive : undefined;
            resourceInputs["instance"] = state ? state.instance : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["noSummaries"] = state ? state.noSummaries : undefined;
            resourceInputs["nssaTranslate"] = state ? state.nssaTranslate : undefined;
            resourceInputs["routingOspfAreaId"] = state ? state.routingOspfAreaId : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as RoutingOspfAreaArgs | undefined;
            if ((!args || args.instance === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instance'");
            }
            resourceInputs["___id_"] = args ? args.___id_ : undefined;
            resourceInputs["___path_"] = args ? args.___path_ : undefined;
            resourceInputs["___unset_"] = args ? args.___unset_ : undefined;
            resourceInputs["areaId"] = args ? args.areaId : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["defaultCost"] = args ? args.defaultCost : undefined;
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["instance"] = args ? args.instance : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["noSummaries"] = args ? args.noSummaries : undefined;
            resourceInputs["nssaTranslate"] = args ? args.nssaTranslate : undefined;
            resourceInputs["routingOspfAreaId"] = args ? args.routingOspfAreaId : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["inactive"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RoutingOspfArea.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RoutingOspfArea resources.
 */
export interface RoutingOspfAreaState {
    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    ___id_?: pulumi.Input<number>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    ___path_?: pulumi.Input<string>;
    /**
     * <em>A set of fields that require setting/unsetting. This is an internal service field, setting a value is not
     * required.</em>
     */
    ___unset_?: pulumi.Input<string>;
    /**
     * OSPF area identifier.
     */
    areaId?: pulumi.Input<string>;
    comment?: pulumi.Input<string>;
    /**
     * Default cost of injected LSAs into the area.
     */
    defaultCost?: pulumi.Input<number>;
    disabled?: pulumi.Input<boolean>;
    inactive?: pulumi.Input<boolean>;
    /**
     * Name of the OSPF instance this area belongs to.
     */
    instance?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * If set then the area will not flood summary LSAs in the stub area. <em>The correct value of this attribute may not be
     * displayed in Winbox. Please check the parameters in the console!</em>
     */
    noSummaries?: pulumi.Input<boolean>;
    /**
     * The parameter indicates which ABR will be used as a translator from type7 to type5 LSA.
     */
    nssaTranslate?: pulumi.Input<string>;
    routingOspfAreaId?: pulumi.Input<string>;
    /**
     * The area type.
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RoutingOspfArea resource.
 */
export interface RoutingOspfAreaArgs {
    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    ___id_?: pulumi.Input<number>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    ___path_?: pulumi.Input<string>;
    /**
     * <em>A set of fields that require setting/unsetting. This is an internal service field, setting a value is not
     * required.</em>
     */
    ___unset_?: pulumi.Input<string>;
    /**
     * OSPF area identifier.
     */
    areaId?: pulumi.Input<string>;
    comment?: pulumi.Input<string>;
    /**
     * Default cost of injected LSAs into the area.
     */
    defaultCost?: pulumi.Input<number>;
    disabled?: pulumi.Input<boolean>;
    /**
     * Name of the OSPF instance this area belongs to.
     */
    instance: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * If set then the area will not flood summary LSAs in the stub area. <em>The correct value of this attribute may not be
     * displayed in Winbox. Please check the parameters in the console!</em>
     */
    noSummaries?: pulumi.Input<boolean>;
    /**
     * The parameter indicates which ABR will be used as a translator from type7 to type5 LSA.
     */
    nssaTranslate?: pulumi.Input<string>;
    routingOspfAreaId?: pulumi.Input<string>;
    /**
     * The area type.
     */
    type?: pulumi.Input<string>;
}
