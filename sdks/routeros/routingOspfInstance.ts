// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class RoutingOspfInstance extends pulumi.CustomResource {
    /**
     * Get an existing RoutingOspfInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RoutingOspfInstanceState, opts?: pulumi.CustomResourceOptions): RoutingOspfInstance {
        return new RoutingOspfInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'routeros:index/routingOspfInstance:RoutingOspfInstance';

    /**
     * Returns true if the given object is an instance of RoutingOspfInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RoutingOspfInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RoutingOspfInstance.__pulumiType;
    }

    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    public readonly ___id_!: pulumi.Output<number | undefined>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    public readonly ___path_!: pulumi.Output<string | undefined>;
    public readonly comment!: pulumi.Output<string | undefined>;
    public readonly disabled!: pulumi.Output<boolean | undefined>;
    /**
     * MPLS-related parameter.
     */
    public readonly domainId!: pulumi.Output<string | undefined>;
    /**
     * if set, then used in route redistribution (as route-tag in all external LSAs generated by this router), and in route
     * calculation (all external LSAs having this route tag are ignored). Needed for interoperability with older Cisco systems.
     * By default not set.
     */
    public readonly domainTag!: pulumi.Output<number | undefined>;
    /**
     * name of the routing filter chain used for incoming prefixes
     */
    public readonly inFilterChain!: pulumi.Output<string | undefined>;
    public /*out*/ readonly inactive!: pulumi.Output<boolean>;
    /**
     * the area used for MPLS traffic engineering.
     */
    public readonly mplsTeAddress!: pulumi.Output<string | undefined>;
    /**
     * the area used for MPLS traffic engineering.
     */
    public readonly mplsTeArea!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    /**
     * Specifies default route (0.0.0.0/0) distribution method.
     */
    public readonly originateDefault!: pulumi.Output<string | undefined>;
    /**
     * name of the routing filter chain used for outgoing prefixes filtering.
     */
    public readonly outFilterChain!: pulumi.Output<string | undefined>;
    /**
     * name of the routing filter select chain, used for output selection.
     */
    public readonly outFilterSelect!: pulumi.Output<string | undefined>;
    /**
     * Enable redistribution of specific route types.
     */
    public readonly redistributes!: pulumi.Output<string[] | undefined>;
    /**
     * OSPF Router ID. Can be set explicitly as an IP address, or as the name of the router-id instance.
     */
    public readonly routerId!: pulumi.Output<string | undefined>;
    public readonly routingOspfInstanceId!: pulumi.Output<string>;
    /**
     * Name of the routing table in use.
     */
    public readonly routingTable!: pulumi.Output<string | undefined>;
    /**
     * OSPF version this instance will be running (v2 for IPv4, v3 for IPv6).
     */
    public readonly version!: pulumi.Output<number | undefined>;
    /**
     * The VRF table this resource operates on.
     */
    public readonly vrf!: pulumi.Output<string | undefined>;

    /**
     * Create a RoutingOspfInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: RoutingOspfInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RoutingOspfInstanceArgs | RoutingOspfInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RoutingOspfInstanceState | undefined;
            resourceInputs["___id_"] = state ? state.___id_ : undefined;
            resourceInputs["___path_"] = state ? state.___path_ : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["domainId"] = state ? state.domainId : undefined;
            resourceInputs["domainTag"] = state ? state.domainTag : undefined;
            resourceInputs["inFilterChain"] = state ? state.inFilterChain : undefined;
            resourceInputs["inactive"] = state ? state.inactive : undefined;
            resourceInputs["mplsTeAddress"] = state ? state.mplsTeAddress : undefined;
            resourceInputs["mplsTeArea"] = state ? state.mplsTeArea : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["originateDefault"] = state ? state.originateDefault : undefined;
            resourceInputs["outFilterChain"] = state ? state.outFilterChain : undefined;
            resourceInputs["outFilterSelect"] = state ? state.outFilterSelect : undefined;
            resourceInputs["redistributes"] = state ? state.redistributes : undefined;
            resourceInputs["routerId"] = state ? state.routerId : undefined;
            resourceInputs["routingOspfInstanceId"] = state ? state.routingOspfInstanceId : undefined;
            resourceInputs["routingTable"] = state ? state.routingTable : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
            resourceInputs["vrf"] = state ? state.vrf : undefined;
        } else {
            const args = argsOrState as RoutingOspfInstanceArgs | undefined;
            resourceInputs["___id_"] = args ? args.___id_ : undefined;
            resourceInputs["___path_"] = args ? args.___path_ : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["domainId"] = args ? args.domainId : undefined;
            resourceInputs["domainTag"] = args ? args.domainTag : undefined;
            resourceInputs["inFilterChain"] = args ? args.inFilterChain : undefined;
            resourceInputs["mplsTeAddress"] = args ? args.mplsTeAddress : undefined;
            resourceInputs["mplsTeArea"] = args ? args.mplsTeArea : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["originateDefault"] = args ? args.originateDefault : undefined;
            resourceInputs["outFilterChain"] = args ? args.outFilterChain : undefined;
            resourceInputs["outFilterSelect"] = args ? args.outFilterSelect : undefined;
            resourceInputs["redistributes"] = args ? args.redistributes : undefined;
            resourceInputs["routerId"] = args ? args.routerId : undefined;
            resourceInputs["routingOspfInstanceId"] = args ? args.routingOspfInstanceId : undefined;
            resourceInputs["routingTable"] = args ? args.routingTable : undefined;
            resourceInputs["version"] = args ? args.version : undefined;
            resourceInputs["vrf"] = args ? args.vrf : undefined;
            resourceInputs["inactive"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RoutingOspfInstance.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RoutingOspfInstance resources.
 */
export interface RoutingOspfInstanceState {
    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    ___id_?: pulumi.Input<number>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    ___path_?: pulumi.Input<string>;
    comment?: pulumi.Input<string>;
    disabled?: pulumi.Input<boolean>;
    /**
     * MPLS-related parameter.
     */
    domainId?: pulumi.Input<string>;
    /**
     * if set, then used in route redistribution (as route-tag in all external LSAs generated by this router), and in route
     * calculation (all external LSAs having this route tag are ignored). Needed for interoperability with older Cisco systems.
     * By default not set.
     */
    domainTag?: pulumi.Input<number>;
    /**
     * name of the routing filter chain used for incoming prefixes
     */
    inFilterChain?: pulumi.Input<string>;
    inactive?: pulumi.Input<boolean>;
    /**
     * the area used for MPLS traffic engineering.
     */
    mplsTeAddress?: pulumi.Input<string>;
    /**
     * the area used for MPLS traffic engineering.
     */
    mplsTeArea?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * Specifies default route (0.0.0.0/0) distribution method.
     */
    originateDefault?: pulumi.Input<string>;
    /**
     * name of the routing filter chain used for outgoing prefixes filtering.
     */
    outFilterChain?: pulumi.Input<string>;
    /**
     * name of the routing filter select chain, used for output selection.
     */
    outFilterSelect?: pulumi.Input<string>;
    /**
     * Enable redistribution of specific route types.
     */
    redistributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * OSPF Router ID. Can be set explicitly as an IP address, or as the name of the router-id instance.
     */
    routerId?: pulumi.Input<string>;
    routingOspfInstanceId?: pulumi.Input<string>;
    /**
     * Name of the routing table in use.
     */
    routingTable?: pulumi.Input<string>;
    /**
     * OSPF version this instance will be running (v2 for IPv4, v3 for IPv6).
     */
    version?: pulumi.Input<number>;
    /**
     * The VRF table this resource operates on.
     */
    vrf?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RoutingOspfInstance resource.
 */
export interface RoutingOspfInstanceArgs {
    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    ___id_?: pulumi.Input<number>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    ___path_?: pulumi.Input<string>;
    comment?: pulumi.Input<string>;
    disabled?: pulumi.Input<boolean>;
    /**
     * MPLS-related parameter.
     */
    domainId?: pulumi.Input<string>;
    /**
     * if set, then used in route redistribution (as route-tag in all external LSAs generated by this router), and in route
     * calculation (all external LSAs having this route tag are ignored). Needed for interoperability with older Cisco systems.
     * By default not set.
     */
    domainTag?: pulumi.Input<number>;
    /**
     * name of the routing filter chain used for incoming prefixes
     */
    inFilterChain?: pulumi.Input<string>;
    /**
     * the area used for MPLS traffic engineering.
     */
    mplsTeAddress?: pulumi.Input<string>;
    /**
     * the area used for MPLS traffic engineering.
     */
    mplsTeArea?: pulumi.Input<string>;
    name?: pulumi.Input<string>;
    /**
     * Specifies default route (0.0.0.0/0) distribution method.
     */
    originateDefault?: pulumi.Input<string>;
    /**
     * name of the routing filter chain used for outgoing prefixes filtering.
     */
    outFilterChain?: pulumi.Input<string>;
    /**
     * name of the routing filter select chain, used for output selection.
     */
    outFilterSelect?: pulumi.Input<string>;
    /**
     * Enable redistribution of specific route types.
     */
    redistributes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * OSPF Router ID. Can be set explicitly as an IP address, or as the name of the router-id instance.
     */
    routerId?: pulumi.Input<string>;
    routingOspfInstanceId?: pulumi.Input<string>;
    /**
     * Name of the routing table in use.
     */
    routingTable?: pulumi.Input<string>;
    /**
     * OSPF version this instance will be running (v2 for IPv4, v3 for IPv6).
     */
    version?: pulumi.Input<number>;
    /**
     * The VRF table this resource operates on.
     */
    vrf?: pulumi.Input<string>;
}
