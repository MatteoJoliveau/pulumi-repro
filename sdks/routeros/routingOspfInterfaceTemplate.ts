// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class RoutingOspfInterfaceTemplate extends pulumi.CustomResource {
    /**
     * Get an existing RoutingOspfInterfaceTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RoutingOspfInterfaceTemplateState, opts?: pulumi.CustomResourceOptions): RoutingOspfInterfaceTemplate {
        return new RoutingOspfInterfaceTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'routeros:index/routingOspfInterfaceTemplate:RoutingOspfInterfaceTemplate';

    /**
     * Returns true if the given object is an instance of RoutingOspfInterfaceTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RoutingOspfInterfaceTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RoutingOspfInterfaceTemplate.__pulumiType;
    }

    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    public readonly ___id_!: pulumi.Output<number | undefined>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    public readonly ___path_!: pulumi.Output<string | undefined>;
    /**
     * <em>A set of fields that require setting/unsetting. This is an internal service field, setting a value is not
     * required.</em>
     */
    public readonly ___unset_!: pulumi.Output<string | undefined>;
    /**
     * The OSPF area to which the matching interface will be associated.
     */
    public readonly area!: pulumi.Output<string>;
    /**
     * Specifies authentication method for OSPF protocol messages.
     */
    public readonly auth!: pulumi.Output<string | undefined>;
    /**
     * The key id is used to calculate message digest (used when MD5 or SHA authentication is enabled).
     */
    public readonly authId!: pulumi.Output<number | undefined>;
    /**
     * The authentication key to be used, should match on all the neighbors of the network segment (available since RouterOS
     * 7.x).
     */
    public readonly authKey!: pulumi.Output<string | undefined>;
    /**
     * The authentication key to be used, should match on all the neighbors of the network segment (for versions before
     * RouterOS 7.x).
     */
    public readonly authenticationKey!: pulumi.Output<string | undefined>;
    public readonly comment!: pulumi.Output<string | undefined>;
    /**
     * Interface cost expressed as link state metric.
     */
    public readonly cost!: pulumi.Output<number | undefined>;
    /**
     * Specifies the interval after which a neighbor is declared dead.
     */
    public readonly deadInterval!: pulumi.Output<string | undefined>;
    public readonly disabled!: pulumi.Output<boolean | undefined>;
    /**
     * The interval between HELLO packets that the router sends out this interface.
     */
    public readonly helloInterval!: pulumi.Output<string | undefined>;
    public /*out*/ readonly inactive!: pulumi.Output<boolean>;
    /**
     * Interface cost expressed as link state metric.
     */
    public readonly instanceId!: pulumi.Output<number | undefined>;
    /**
     * Interfaces to match.
     */
    public readonly interfaces!: pulumi.Output<string[] | undefined>;
    /**
     * The network prefixes associated with the area.
     */
    public readonly networks!: pulumi.Output<string[] | undefined>;
    /**
     * If enabled, then do not send or receive OSPF traffic on the matching interfaces. <em>The correct value of this attribute
     * may not be displayed in Winbox. Please check the parameters in the console!</em>
     */
    public readonly passive!: pulumi.Output<boolean | undefined>;
    /**
     * Name of the address list containing networks that should be advertised to the v3 interface.
     */
    public readonly prefixList!: pulumi.Output<string | undefined>;
    /**
     * Router's priority. Used to determine the designated router in a broadcast network.
     */
    public readonly priority!: pulumi.Output<number | undefined>;
    /**
     * Time interval the lost link state advertisement will be resent.
     */
    public readonly retransmitInterval!: pulumi.Output<string | undefined>;
    public readonly routingOspfInterfaceTemplateId!: pulumi.Output<string>;
    /**
     * Link-state transmit delay is the estimated time it takes to transmit a link-state update packet on the interface.
     */
    public readonly transmitDelay!: pulumi.Output<string | undefined>;
    /**
     * The OSPF network type on this interface.
     */
    public readonly type!: pulumi.Output<string | undefined>;
    /**
     * Specifies the router-id of the neighbor which should be connected over the virtual link.
     */
    public readonly vlinkNeighborId!: pulumi.Output<string | undefined>;
    /**
     * A non-backbone area the two routers have in common over which the virtual link will be established.
     */
    public readonly vlinkTransitArea!: pulumi.Output<string | undefined>;

    /**
     * Create a RoutingOspfInterfaceTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RoutingOspfInterfaceTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RoutingOspfInterfaceTemplateArgs | RoutingOspfInterfaceTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RoutingOspfInterfaceTemplateState | undefined;
            resourceInputs["___id_"] = state ? state.___id_ : undefined;
            resourceInputs["___path_"] = state ? state.___path_ : undefined;
            resourceInputs["___unset_"] = state ? state.___unset_ : undefined;
            resourceInputs["area"] = state ? state.area : undefined;
            resourceInputs["auth"] = state ? state.auth : undefined;
            resourceInputs["authId"] = state ? state.authId : undefined;
            resourceInputs["authKey"] = state ? state.authKey : undefined;
            resourceInputs["authenticationKey"] = state ? state.authenticationKey : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["cost"] = state ? state.cost : undefined;
            resourceInputs["deadInterval"] = state ? state.deadInterval : undefined;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["helloInterval"] = state ? state.helloInterval : undefined;
            resourceInputs["inactive"] = state ? state.inactive : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["interfaces"] = state ? state.interfaces : undefined;
            resourceInputs["networks"] = state ? state.networks : undefined;
            resourceInputs["passive"] = state ? state.passive : undefined;
            resourceInputs["prefixList"] = state ? state.prefixList : undefined;
            resourceInputs["priority"] = state ? state.priority : undefined;
            resourceInputs["retransmitInterval"] = state ? state.retransmitInterval : undefined;
            resourceInputs["routingOspfInterfaceTemplateId"] = state ? state.routingOspfInterfaceTemplateId : undefined;
            resourceInputs["transmitDelay"] = state ? state.transmitDelay : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["vlinkNeighborId"] = state ? state.vlinkNeighborId : undefined;
            resourceInputs["vlinkTransitArea"] = state ? state.vlinkTransitArea : undefined;
        } else {
            const args = argsOrState as RoutingOspfInterfaceTemplateArgs | undefined;
            if ((!args || args.area === undefined) && !opts.urn) {
                throw new Error("Missing required property 'area'");
            }
            resourceInputs["___id_"] = args ? args.___id_ : undefined;
            resourceInputs["___path_"] = args ? args.___path_ : undefined;
            resourceInputs["___unset_"] = args ? args.___unset_ : undefined;
            resourceInputs["area"] = args ? args.area : undefined;
            resourceInputs["auth"] = args ? args.auth : undefined;
            resourceInputs["authId"] = args ? args.authId : undefined;
            resourceInputs["authKey"] = args?.authKey ? pulumi.secret(args.authKey) : undefined;
            resourceInputs["authenticationKey"] = args?.authenticationKey ? pulumi.secret(args.authenticationKey) : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["cost"] = args ? args.cost : undefined;
            resourceInputs["deadInterval"] = args ? args.deadInterval : undefined;
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["helloInterval"] = args ? args.helloInterval : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["interfaces"] = args ? args.interfaces : undefined;
            resourceInputs["networks"] = args ? args.networks : undefined;
            resourceInputs["passive"] = args ? args.passive : undefined;
            resourceInputs["prefixList"] = args ? args.prefixList : undefined;
            resourceInputs["priority"] = args ? args.priority : undefined;
            resourceInputs["retransmitInterval"] = args ? args.retransmitInterval : undefined;
            resourceInputs["routingOspfInterfaceTemplateId"] = args ? args.routingOspfInterfaceTemplateId : undefined;
            resourceInputs["transmitDelay"] = args ? args.transmitDelay : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["vlinkNeighborId"] = args ? args.vlinkNeighborId : undefined;
            resourceInputs["vlinkTransitArea"] = args ? args.vlinkTransitArea : undefined;
            resourceInputs["inactive"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["authKey", "authenticationKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(RoutingOspfInterfaceTemplate.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering RoutingOspfInterfaceTemplate resources.
 */
export interface RoutingOspfInterfaceTemplateState {
    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    ___id_?: pulumi.Input<number>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    ___path_?: pulumi.Input<string>;
    /**
     * <em>A set of fields that require setting/unsetting. This is an internal service field, setting a value is not
     * required.</em>
     */
    ___unset_?: pulumi.Input<string>;
    /**
     * The OSPF area to which the matching interface will be associated.
     */
    area?: pulumi.Input<string>;
    /**
     * Specifies authentication method for OSPF protocol messages.
     */
    auth?: pulumi.Input<string>;
    /**
     * The key id is used to calculate message digest (used when MD5 or SHA authentication is enabled).
     */
    authId?: pulumi.Input<number>;
    /**
     * The authentication key to be used, should match on all the neighbors of the network segment (available since RouterOS
     * 7.x).
     */
    authKey?: pulumi.Input<string>;
    /**
     * The authentication key to be used, should match on all the neighbors of the network segment (for versions before
     * RouterOS 7.x).
     */
    authenticationKey?: pulumi.Input<string>;
    comment?: pulumi.Input<string>;
    /**
     * Interface cost expressed as link state metric.
     */
    cost?: pulumi.Input<number>;
    /**
     * Specifies the interval after which a neighbor is declared dead.
     */
    deadInterval?: pulumi.Input<string>;
    disabled?: pulumi.Input<boolean>;
    /**
     * The interval between HELLO packets that the router sends out this interface.
     */
    helloInterval?: pulumi.Input<string>;
    inactive?: pulumi.Input<boolean>;
    /**
     * Interface cost expressed as link state metric.
     */
    instanceId?: pulumi.Input<number>;
    /**
     * Interfaces to match.
     */
    interfaces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The network prefixes associated with the area.
     */
    networks?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * If enabled, then do not send or receive OSPF traffic on the matching interfaces. <em>The correct value of this attribute
     * may not be displayed in Winbox. Please check the parameters in the console!</em>
     */
    passive?: pulumi.Input<boolean>;
    /**
     * Name of the address list containing networks that should be advertised to the v3 interface.
     */
    prefixList?: pulumi.Input<string>;
    /**
     * Router's priority. Used to determine the designated router in a broadcast network.
     */
    priority?: pulumi.Input<number>;
    /**
     * Time interval the lost link state advertisement will be resent.
     */
    retransmitInterval?: pulumi.Input<string>;
    routingOspfInterfaceTemplateId?: pulumi.Input<string>;
    /**
     * Link-state transmit delay is the estimated time it takes to transmit a link-state update packet on the interface.
     */
    transmitDelay?: pulumi.Input<string>;
    /**
     * The OSPF network type on this interface.
     */
    type?: pulumi.Input<string>;
    /**
     * Specifies the router-id of the neighbor which should be connected over the virtual link.
     */
    vlinkNeighborId?: pulumi.Input<string>;
    /**
     * A non-backbone area the two routers have in common over which the virtual link will be established.
     */
    vlinkTransitArea?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RoutingOspfInterfaceTemplate resource.
 */
export interface RoutingOspfInterfaceTemplateArgs {
    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    ___id_?: pulumi.Input<number>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    ___path_?: pulumi.Input<string>;
    /**
     * <em>A set of fields that require setting/unsetting. This is an internal service field, setting a value is not
     * required.</em>
     */
    ___unset_?: pulumi.Input<string>;
    /**
     * The OSPF area to which the matching interface will be associated.
     */
    area: pulumi.Input<string>;
    /**
     * Specifies authentication method for OSPF protocol messages.
     */
    auth?: pulumi.Input<string>;
    /**
     * The key id is used to calculate message digest (used when MD5 or SHA authentication is enabled).
     */
    authId?: pulumi.Input<number>;
    /**
     * The authentication key to be used, should match on all the neighbors of the network segment (available since RouterOS
     * 7.x).
     */
    authKey?: pulumi.Input<string>;
    /**
     * The authentication key to be used, should match on all the neighbors of the network segment (for versions before
     * RouterOS 7.x).
     */
    authenticationKey?: pulumi.Input<string>;
    comment?: pulumi.Input<string>;
    /**
     * Interface cost expressed as link state metric.
     */
    cost?: pulumi.Input<number>;
    /**
     * Specifies the interval after which a neighbor is declared dead.
     */
    deadInterval?: pulumi.Input<string>;
    disabled?: pulumi.Input<boolean>;
    /**
     * The interval between HELLO packets that the router sends out this interface.
     */
    helloInterval?: pulumi.Input<string>;
    /**
     * Interface cost expressed as link state metric.
     */
    instanceId?: pulumi.Input<number>;
    /**
     * Interfaces to match.
     */
    interfaces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The network prefixes associated with the area.
     */
    networks?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * If enabled, then do not send or receive OSPF traffic on the matching interfaces. <em>The correct value of this attribute
     * may not be displayed in Winbox. Please check the parameters in the console!</em>
     */
    passive?: pulumi.Input<boolean>;
    /**
     * Name of the address list containing networks that should be advertised to the v3 interface.
     */
    prefixList?: pulumi.Input<string>;
    /**
     * Router's priority. Used to determine the designated router in a broadcast network.
     */
    priority?: pulumi.Input<number>;
    /**
     * Time interval the lost link state advertisement will be resent.
     */
    retransmitInterval?: pulumi.Input<string>;
    routingOspfInterfaceTemplateId?: pulumi.Input<string>;
    /**
     * Link-state transmit delay is the estimated time it takes to transmit a link-state update packet on the interface.
     */
    transmitDelay?: pulumi.Input<string>;
    /**
     * The OSPF network type on this interface.
     */
    type?: pulumi.Input<string>;
    /**
     * Specifies the router-id of the neighbor which should be connected over the virtual link.
     */
    vlinkNeighborId?: pulumi.Input<string>;
    /**
     * A non-backbone area the two routers have in common over which the virtual link will be established.
     */
    vlinkTransitArea?: pulumi.Input<string>;
}
