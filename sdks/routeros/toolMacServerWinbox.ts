// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class ToolMacServerWinbox extends pulumi.CustomResource {
    /**
     * Get an existing ToolMacServerWinbox resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ToolMacServerWinboxState, opts?: pulumi.CustomResourceOptions): ToolMacServerWinbox {
        return new ToolMacServerWinbox(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'routeros:index/toolMacServerWinbox:ToolMacServerWinbox';

    /**
     * Returns true if the given object is an instance of ToolMacServerWinbox.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ToolMacServerWinbox {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ToolMacServerWinbox.__pulumiType;
    }

    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    public readonly ___id_!: pulumi.Output<number | undefined>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    public readonly ___path_!: pulumi.Output<string | undefined>;
    /**
     * List of interfaces for MAC WinBox access.
     */
    public readonly allowedInterfaceList!: pulumi.Output<string>;
    public readonly toolMacServerWinboxId!: pulumi.Output<string>;

    /**
     * Create a ToolMacServerWinbox resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ToolMacServerWinboxArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ToolMacServerWinboxArgs | ToolMacServerWinboxState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ToolMacServerWinboxState | undefined;
            resourceInputs["___id_"] = state ? state.___id_ : undefined;
            resourceInputs["___path_"] = state ? state.___path_ : undefined;
            resourceInputs["allowedInterfaceList"] = state ? state.allowedInterfaceList : undefined;
            resourceInputs["toolMacServerWinboxId"] = state ? state.toolMacServerWinboxId : undefined;
        } else {
            const args = argsOrState as ToolMacServerWinboxArgs | undefined;
            if ((!args || args.allowedInterfaceList === undefined) && !opts.urn) {
                throw new Error("Missing required property 'allowedInterfaceList'");
            }
            resourceInputs["___id_"] = args ? args.___id_ : undefined;
            resourceInputs["___path_"] = args ? args.___path_ : undefined;
            resourceInputs["allowedInterfaceList"] = args ? args.allowedInterfaceList : undefined;
            resourceInputs["toolMacServerWinboxId"] = args ? args.toolMacServerWinboxId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ToolMacServerWinbox.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering ToolMacServerWinbox resources.
 */
export interface ToolMacServerWinboxState {
    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    ___id_?: pulumi.Input<number>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    ___path_?: pulumi.Input<string>;
    /**
     * List of interfaces for MAC WinBox access.
     */
    allowedInterfaceList?: pulumi.Input<string>;
    toolMacServerWinboxId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ToolMacServerWinbox resource.
 */
export interface ToolMacServerWinboxArgs {
    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    ___id_?: pulumi.Input<number>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    ___path_?: pulumi.Input<string>;
    /**
     * List of interfaces for MAC WinBox access.
     */
    allowedInterfaceList: pulumi.Input<string>;
    toolMacServerWinboxId?: pulumi.Input<string>;
}
