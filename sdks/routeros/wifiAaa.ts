// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class WifiAaa extends pulumi.CustomResource {
    /**
     * Get an existing WifiAaa resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WifiAaaState, opts?: pulumi.CustomResourceOptions): WifiAaa {
        return new WifiAaa(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'routeros:index/wifiAaa:WifiAaa';

    /**
     * Returns true if the given object is an instance of WifiAaa.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WifiAaa {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WifiAaa.__pulumiType;
    }

    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    public readonly ___id_!: pulumi.Output<number | undefined>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    public readonly ___path_!: pulumi.Output<string | undefined>;
    /**
     * Format of the `Called-Station-Id` RADIUS attribute.
     */
    public readonly calledFormat!: pulumi.Output<string | undefined>;
    /**
     * Format of the `Calling-Station-Id` RADIUS attribute.
     */
    public readonly callingFormat!: pulumi.Output<string | undefined>;
    public readonly comment!: pulumi.Output<string | undefined>;
    public readonly disabled!: pulumi.Output<boolean | undefined>;
    /**
     * Interval at which to send interim updates about traffic accounting to the RADIUS server.
     */
    public readonly interimUpdate!: pulumi.Output<string | undefined>;
    /**
     * Time to cache RADIUS server replies when MAC address authentication is enabled.
     */
    public readonly macCaching!: pulumi.Output<string | undefined>;
    /**
     * Name of the AAA profile.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Value of the `NAS-Identifier` RADIUS attribute.
     */
    public readonly nasIdentifier!: pulumi.Output<string | undefined>;
    /**
     * Format of the `User-Password` RADIUS attribute.
     */
    public readonly passwordFormat!: pulumi.Output<string | undefined>;
    /**
     * Format of the `User-Name` RADIUS attribute.
     */
    public readonly usernameFormat!: pulumi.Output<string | undefined>;
    public readonly wifiAaaId!: pulumi.Output<string>;

    /**
     * Create a WifiAaa resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: WifiAaaArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WifiAaaArgs | WifiAaaState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WifiAaaState | undefined;
            resourceInputs["___id_"] = state ? state.___id_ : undefined;
            resourceInputs["___path_"] = state ? state.___path_ : undefined;
            resourceInputs["calledFormat"] = state ? state.calledFormat : undefined;
            resourceInputs["callingFormat"] = state ? state.callingFormat : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["interimUpdate"] = state ? state.interimUpdate : undefined;
            resourceInputs["macCaching"] = state ? state.macCaching : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["nasIdentifier"] = state ? state.nasIdentifier : undefined;
            resourceInputs["passwordFormat"] = state ? state.passwordFormat : undefined;
            resourceInputs["usernameFormat"] = state ? state.usernameFormat : undefined;
            resourceInputs["wifiAaaId"] = state ? state.wifiAaaId : undefined;
        } else {
            const args = argsOrState as WifiAaaArgs | undefined;
            resourceInputs["___id_"] = args ? args.___id_ : undefined;
            resourceInputs["___path_"] = args ? args.___path_ : undefined;
            resourceInputs["calledFormat"] = args ? args.calledFormat : undefined;
            resourceInputs["callingFormat"] = args ? args.callingFormat : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["interimUpdate"] = args ? args.interimUpdate : undefined;
            resourceInputs["macCaching"] = args ? args.macCaching : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["nasIdentifier"] = args ? args.nasIdentifier : undefined;
            resourceInputs["passwordFormat"] = args ? args.passwordFormat : undefined;
            resourceInputs["usernameFormat"] = args ? args.usernameFormat : undefined;
            resourceInputs["wifiAaaId"] = args ? args.wifiAaaId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WifiAaa.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering WifiAaa resources.
 */
export interface WifiAaaState {
    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    ___id_?: pulumi.Input<number>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    ___path_?: pulumi.Input<string>;
    /**
     * Format of the `Called-Station-Id` RADIUS attribute.
     */
    calledFormat?: pulumi.Input<string>;
    /**
     * Format of the `Calling-Station-Id` RADIUS attribute.
     */
    callingFormat?: pulumi.Input<string>;
    comment?: pulumi.Input<string>;
    disabled?: pulumi.Input<boolean>;
    /**
     * Interval at which to send interim updates about traffic accounting to the RADIUS server.
     */
    interimUpdate?: pulumi.Input<string>;
    /**
     * Time to cache RADIUS server replies when MAC address authentication is enabled.
     */
    macCaching?: pulumi.Input<string>;
    /**
     * Name of the AAA profile.
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the `NAS-Identifier` RADIUS attribute.
     */
    nasIdentifier?: pulumi.Input<string>;
    /**
     * Format of the `User-Password` RADIUS attribute.
     */
    passwordFormat?: pulumi.Input<string>;
    /**
     * Format of the `User-Name` RADIUS attribute.
     */
    usernameFormat?: pulumi.Input<string>;
    wifiAaaId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WifiAaa resource.
 */
export interface WifiAaaArgs {
    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    ___id_?: pulumi.Input<number>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    ___path_?: pulumi.Input<string>;
    /**
     * Format of the `Called-Station-Id` RADIUS attribute.
     */
    calledFormat?: pulumi.Input<string>;
    /**
     * Format of the `Calling-Station-Id` RADIUS attribute.
     */
    callingFormat?: pulumi.Input<string>;
    comment?: pulumi.Input<string>;
    disabled?: pulumi.Input<boolean>;
    /**
     * Interval at which to send interim updates about traffic accounting to the RADIUS server.
     */
    interimUpdate?: pulumi.Input<string>;
    /**
     * Time to cache RADIUS server replies when MAC address authentication is enabled.
     */
    macCaching?: pulumi.Input<string>;
    /**
     * Name of the AAA profile.
     */
    name?: pulumi.Input<string>;
    /**
     * Value of the `NAS-Identifier` RADIUS attribute.
     */
    nasIdentifier?: pulumi.Input<string>;
    /**
     * Format of the `User-Password` RADIUS attribute.
     */
    passwordFormat?: pulumi.Input<string>;
    /**
     * Format of the `User-Name` RADIUS attribute.
     */
    usernameFormat?: pulumi.Input<string>;
    wifiAaaId?: pulumi.Input<string>;
}
