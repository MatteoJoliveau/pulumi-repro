// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Zerotier extends pulumi.CustomResource {
    /**
     * Get an existing Zerotier resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZerotierState, opts?: pulumi.CustomResourceOptions): Zerotier {
        return new Zerotier(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'routeros:index/zerotier:Zerotier';

    /**
     * Returns true if the given object is an instance of Zerotier.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Zerotier {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Zerotier.__pulumiType;
    }

    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    public readonly ___id_!: pulumi.Output<number | undefined>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    public readonly ___path_!: pulumi.Output<string | undefined>;
    /**
     * <em>A set of transformations for field names. This is an internal service field, setting a value is not required.</em>
     */
    public readonly ___ts_!: pulumi.Output<string | undefined>;
    public readonly comment!: pulumi.Output<string | undefined>;
    public readonly disabled!: pulumi.Output<boolean | undefined>;
    /**
     * The 40-bit unique instance address.
     */
    public readonly identity!: pulumi.Output<string | undefined>;
    /**
     * The public identity of the ZeroTier instance.
     */
    public /*out*/ readonly identityPublic!: pulumi.Output<string>;
    /**
     * The interfaces to discover ZeroTier peers by ARP and IP type connections.
     */
    public readonly interfaces!: pulumi.Output<string[] | undefined>;
    /**
     * Name of the ZeroTier instance.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A flag whether the ZeroTier instance is currently online.
     */
    public /*out*/ readonly online!: pulumi.Output<boolean>;
    /**
     * The port number the instance listens to.
     */
    public readonly port!: pulumi.Output<number | undefined>;
    /**
     * The route distance for routes obtained from the planet/moon server.
     */
    public readonly routeDistance!: pulumi.Output<number | undefined>;
    /**
     * The state of the ZeroTier instance.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    public readonly zerotierId!: pulumi.Output<string>;

    /**
     * Create a Zerotier resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ZerotierArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ZerotierArgs | ZerotierState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ZerotierState | undefined;
            resourceInputs["___id_"] = state ? state.___id_ : undefined;
            resourceInputs["___path_"] = state ? state.___path_ : undefined;
            resourceInputs["___ts_"] = state ? state.___ts_ : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["disabled"] = state ? state.disabled : undefined;
            resourceInputs["identity"] = state ? state.identity : undefined;
            resourceInputs["identityPublic"] = state ? state.identityPublic : undefined;
            resourceInputs["interfaces"] = state ? state.interfaces : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["online"] = state ? state.online : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["routeDistance"] = state ? state.routeDistance : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["zerotierId"] = state ? state.zerotierId : undefined;
        } else {
            const args = argsOrState as ZerotierArgs | undefined;
            resourceInputs["___id_"] = args ? args.___id_ : undefined;
            resourceInputs["___path_"] = args ? args.___path_ : undefined;
            resourceInputs["___ts_"] = args ? args.___ts_ : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["disabled"] = args ? args.disabled : undefined;
            resourceInputs["identity"] = args ? args.identity : undefined;
            resourceInputs["interfaces"] = args ? args.interfaces : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["routeDistance"] = args ? args.routeDistance : undefined;
            resourceInputs["zerotierId"] = args ? args.zerotierId : undefined;
            resourceInputs["identityPublic"] = undefined /*out*/;
            resourceInputs["online"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Zerotier.__pulumiType, name, resourceInputs, opts, false /*dependency*/, utilities.getPackage());
    }
}

/**
 * Input properties used for looking up and filtering Zerotier resources.
 */
export interface ZerotierState {
    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    ___id_?: pulumi.Input<number>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    ___path_?: pulumi.Input<string>;
    /**
     * <em>A set of transformations for field names. This is an internal service field, setting a value is not required.</em>
     */
    ___ts_?: pulumi.Input<string>;
    comment?: pulumi.Input<string>;
    disabled?: pulumi.Input<boolean>;
    /**
     * The 40-bit unique instance address.
     */
    identity?: pulumi.Input<string>;
    /**
     * The public identity of the ZeroTier instance.
     */
    identityPublic?: pulumi.Input<string>;
    /**
     * The interfaces to discover ZeroTier peers by ARP and IP type connections.
     */
    interfaces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the ZeroTier instance.
     */
    name?: pulumi.Input<string>;
    /**
     * A flag whether the ZeroTier instance is currently online.
     */
    online?: pulumi.Input<boolean>;
    /**
     * The port number the instance listens to.
     */
    port?: pulumi.Input<number>;
    /**
     * The route distance for routes obtained from the planet/moon server.
     */
    routeDistance?: pulumi.Input<number>;
    /**
     * The state of the ZeroTier instance.
     */
    state?: pulumi.Input<string>;
    zerotierId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Zerotier resource.
 */
export interface ZerotierArgs {
    /**
     * <em>Resource ID type (.id / name). This is an internal service field, setting a value is not required.</em>
     */
    ___id_?: pulumi.Input<number>;
    /**
     * <em>Resource path for CRUD operations. This is an internal service field, setting a value is not required.</em>
     */
    ___path_?: pulumi.Input<string>;
    /**
     * <em>A set of transformations for field names. This is an internal service field, setting a value is not required.</em>
     */
    ___ts_?: pulumi.Input<string>;
    comment?: pulumi.Input<string>;
    disabled?: pulumi.Input<boolean>;
    /**
     * The 40-bit unique instance address.
     */
    identity?: pulumi.Input<string>;
    /**
     * The interfaces to discover ZeroTier peers by ARP and IP type connections.
     */
    interfaces?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name of the ZeroTier instance.
     */
    name?: pulumi.Input<string>;
    /**
     * The port number the instance listens to.
     */
    port?: pulumi.Input<number>;
    /**
     * The route distance for routes obtained from the planet/moon server.
     */
    routeDistance?: pulumi.Input<number>;
    zerotierId?: pulumi.Input<string>;
}
